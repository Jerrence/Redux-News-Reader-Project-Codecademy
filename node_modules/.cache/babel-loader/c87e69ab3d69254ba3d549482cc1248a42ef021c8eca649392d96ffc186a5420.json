{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.NoDeprecatedCustomRule = NoDeprecatedCustomRule;\nvar _invariant = require('../../../jsutils/invariant.js');\nvar _GraphQLError = require('../../../error/GraphQLError.js');\nvar _definition = require('../../../type/definition.js');\n\n/**\n * No deprecated\n *\n * A GraphQL document is only valid if all selected fields and all used enum values have not been\n * deprecated.\n *\n * Note: This rule is optional and is not part of the Validation section of the GraphQL\n * Specification. The main purpose of this rule is detection of deprecated usages and not\n * necessarily to forbid their use when querying a service.\n */\nfunction NoDeprecatedCustomRule(context) {\n  return {\n    Field(node) {\n      const fieldDef = context.getFieldDef();\n      const deprecationReason = fieldDef === null || fieldDef === void 0 ? void 0 : fieldDef.deprecationReason;\n      if (fieldDef && deprecationReason != null) {\n        const parentType = context.getParentType();\n        parentType != null || (0, _invariant.invariant)(false);\n        context.reportError(new _GraphQLError.GraphQLError(`The field ${parentType.name}.${fieldDef.name} is deprecated. ${deprecationReason}`, {\n          nodes: node\n        }));\n      }\n    },\n    Argument(node) {\n      const argDef = context.getArgument();\n      const deprecationReason = argDef === null || argDef === void 0 ? void 0 : argDef.deprecationReason;\n      if (argDef && deprecationReason != null) {\n        const directiveDef = context.getDirective();\n        if (directiveDef != null) {\n          context.reportError(new _GraphQLError.GraphQLError(`Directive \"@${directiveDef.name}\" argument \"${argDef.name}\" is deprecated. ${deprecationReason}`, {\n            nodes: node\n          }));\n        } else {\n          const parentType = context.getParentType();\n          const fieldDef = context.getFieldDef();\n          parentType != null && fieldDef != null || (0, _invariant.invariant)(false);\n          context.reportError(new _GraphQLError.GraphQLError(`Field \"${parentType.name}.${fieldDef.name}\" argument \"${argDef.name}\" is deprecated. ${deprecationReason}`, {\n            nodes: node\n          }));\n        }\n      }\n    },\n    ObjectField(node) {\n      const inputObjectDef = (0, _definition.getNamedType)(context.getParentInputType());\n      if ((0, _definition.isInputObjectType)(inputObjectDef)) {\n        const inputFieldDef = inputObjectDef.getFields()[node.name.value];\n        const deprecationReason = inputFieldDef === null || inputFieldDef === void 0 ? void 0 : inputFieldDef.deprecationReason;\n        if (deprecationReason != null) {\n          context.reportError(new _GraphQLError.GraphQLError(`The input field ${inputObjectDef.name}.${inputFieldDef.name} is deprecated. ${deprecationReason}`, {\n            nodes: node\n          }));\n        }\n      }\n    },\n    EnumValue(node) {\n      const enumValueDef = context.getEnumValue();\n      const deprecationReason = enumValueDef === null || enumValueDef === void 0 ? void 0 : enumValueDef.deprecationReason;\n      if (enumValueDef && deprecationReason != null) {\n        const enumTypeDef = (0, _definition.getNamedType)(context.getInputType());\n        enumTypeDef != null || (0, _invariant.invariant)(false);\n        context.reportError(new _GraphQLError.GraphQLError(`The enum value \"${enumTypeDef.name}.${enumValueDef.name}\" is deprecated. ${deprecationReason}`, {\n          nodes: node\n        }));\n      }\n    }\n  };\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","NoDeprecatedCustomRule","_invariant","require","_GraphQLError","_definition","context","Field","node","fieldDef","getFieldDef","deprecationReason","parentType","getParentType","invariant","reportError","GraphQLError","name","nodes","Argument","argDef","getArgument","directiveDef","getDirective","ObjectField","inputObjectDef","getNamedType","getParentInputType","isInputObjectType","inputFieldDef","getFields","EnumValue","enumValueDef","getEnumValue","enumTypeDef","getInputType"],"sources":["/Users/lawrence/Documents/Codecademy/Redux News Reader (project)/node_modules/graphql/validation/rules/custom/NoDeprecatedCustomRule.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.NoDeprecatedCustomRule = NoDeprecatedCustomRule;\n\nvar _invariant = require('../../../jsutils/invariant.js');\n\nvar _GraphQLError = require('../../../error/GraphQLError.js');\n\nvar _definition = require('../../../type/definition.js');\n\n/**\n * No deprecated\n *\n * A GraphQL document is only valid if all selected fields and all used enum values have not been\n * deprecated.\n *\n * Note: This rule is optional and is not part of the Validation section of the GraphQL\n * Specification. The main purpose of this rule is detection of deprecated usages and not\n * necessarily to forbid their use when querying a service.\n */\nfunction NoDeprecatedCustomRule(context) {\n  return {\n    Field(node) {\n      const fieldDef = context.getFieldDef();\n      const deprecationReason =\n        fieldDef === null || fieldDef === void 0\n          ? void 0\n          : fieldDef.deprecationReason;\n\n      if (fieldDef && deprecationReason != null) {\n        const parentType = context.getParentType();\n        parentType != null || (0, _invariant.invariant)(false);\n        context.reportError(\n          new _GraphQLError.GraphQLError(\n            `The field ${parentType.name}.${fieldDef.name} is deprecated. ${deprecationReason}`,\n            {\n              nodes: node,\n            },\n          ),\n        );\n      }\n    },\n\n    Argument(node) {\n      const argDef = context.getArgument();\n      const deprecationReason =\n        argDef === null || argDef === void 0\n          ? void 0\n          : argDef.deprecationReason;\n\n      if (argDef && deprecationReason != null) {\n        const directiveDef = context.getDirective();\n\n        if (directiveDef != null) {\n          context.reportError(\n            new _GraphQLError.GraphQLError(\n              `Directive \"@${directiveDef.name}\" argument \"${argDef.name}\" is deprecated. ${deprecationReason}`,\n              {\n                nodes: node,\n              },\n            ),\n          );\n        } else {\n          const parentType = context.getParentType();\n          const fieldDef = context.getFieldDef();\n          (parentType != null && fieldDef != null) ||\n            (0, _invariant.invariant)(false);\n          context.reportError(\n            new _GraphQLError.GraphQLError(\n              `Field \"${parentType.name}.${fieldDef.name}\" argument \"${argDef.name}\" is deprecated. ${deprecationReason}`,\n              {\n                nodes: node,\n              },\n            ),\n          );\n        }\n      }\n    },\n\n    ObjectField(node) {\n      const inputObjectDef = (0, _definition.getNamedType)(\n        context.getParentInputType(),\n      );\n\n      if ((0, _definition.isInputObjectType)(inputObjectDef)) {\n        const inputFieldDef = inputObjectDef.getFields()[node.name.value];\n        const deprecationReason =\n          inputFieldDef === null || inputFieldDef === void 0\n            ? void 0\n            : inputFieldDef.deprecationReason;\n\n        if (deprecationReason != null) {\n          context.reportError(\n            new _GraphQLError.GraphQLError(\n              `The input field ${inputObjectDef.name}.${inputFieldDef.name} is deprecated. ${deprecationReason}`,\n              {\n                nodes: node,\n              },\n            ),\n          );\n        }\n      }\n    },\n\n    EnumValue(node) {\n      const enumValueDef = context.getEnumValue();\n      const deprecationReason =\n        enumValueDef === null || enumValueDef === void 0\n          ? void 0\n          : enumValueDef.deprecationReason;\n\n      if (enumValueDef && deprecationReason != null) {\n        const enumTypeDef = (0, _definition.getNamedType)(\n          context.getInputType(),\n        );\n        enumTypeDef != null || (0, _invariant.invariant)(false);\n        context.reportError(\n          new _GraphQLError.GraphQLError(\n            `The enum value \"${enumTypeDef.name}.${enumValueDef.name}\" is deprecated. ${deprecationReason}`,\n            {\n              nodes: node,\n            },\n          ),\n        );\n      }\n    },\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}