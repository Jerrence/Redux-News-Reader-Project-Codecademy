{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.ScalarLeafsRule = ScalarLeafsRule;\nvar _inspect = require('../../jsutils/inspect.js');\nvar _GraphQLError = require('../../error/GraphQLError.js');\nvar _definition = require('../../type/definition.js');\n\n/**\n * Scalar leafs\n *\n * A GraphQL document is valid only if all leaf fields (fields without\n * sub selections) are of scalar or enum types.\n */\nfunction ScalarLeafsRule(context) {\n  return {\n    Field(node) {\n      const type = context.getType();\n      const selectionSet = node.selectionSet;\n      if (type) {\n        if ((0, _definition.isLeafType)((0, _definition.getNamedType)(type))) {\n          if (selectionSet) {\n            const fieldName = node.name.value;\n            const typeStr = (0, _inspect.inspect)(type);\n            context.reportError(new _GraphQLError.GraphQLError(`Field \"${fieldName}\" must not have a selection since type \"${typeStr}\" has no subfields.`, {\n              nodes: selectionSet\n            }));\n          }\n        } else if (!selectionSet) {\n          const fieldName = node.name.value;\n          const typeStr = (0, _inspect.inspect)(type);\n          context.reportError(new _GraphQLError.GraphQLError(`Field \"${fieldName}\" of type \"${typeStr}\" must have a selection of subfields. Did you mean \"${fieldName} { ... }\"?`, {\n            nodes: node\n          }));\n        }\n      }\n    }\n  };\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","ScalarLeafsRule","_inspect","require","_GraphQLError","_definition","context","Field","node","type","getType","selectionSet","isLeafType","getNamedType","fieldName","name","typeStr","inspect","reportError","GraphQLError","nodes"],"sources":["/Users/lawrence/Documents/Codecademy/Redux News Reader (project)/node_modules/graphql/validation/rules/ScalarLeafsRule.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.ScalarLeafsRule = ScalarLeafsRule;\n\nvar _inspect = require('../../jsutils/inspect.js');\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\nvar _definition = require('../../type/definition.js');\n\n/**\n * Scalar leafs\n *\n * A GraphQL document is valid only if all leaf fields (fields without\n * sub selections) are of scalar or enum types.\n */\nfunction ScalarLeafsRule(context) {\n  return {\n    Field(node) {\n      const type = context.getType();\n      const selectionSet = node.selectionSet;\n\n      if (type) {\n        if ((0, _definition.isLeafType)((0, _definition.getNamedType)(type))) {\n          if (selectionSet) {\n            const fieldName = node.name.value;\n            const typeStr = (0, _inspect.inspect)(type);\n            context.reportError(\n              new _GraphQLError.GraphQLError(\n                `Field \"${fieldName}\" must not have a selection since type \"${typeStr}\" has no subfields.`,\n                {\n                  nodes: selectionSet,\n                },\n              ),\n            );\n          }\n        } else if (!selectionSet) {\n          const fieldName = node.name.value;\n          const typeStr = (0, _inspect.inspect)(type);\n          context.reportError(\n            new _GraphQLError.GraphQLError(\n              `Field \"${fieldName}\" of type \"${typeStr}\" must have a selection of subfields. Did you mean \"${fieldName} { ... }\"?`,\n              {\n                nodes: node,\n              },\n            ),\n          );\n        }\n      }\n    },\n  };\n}\n"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,eAAe,GAAGA,eAAe;AAEzC,IAAIC,QAAQ,GAAGC,OAAO,CAAC,0BAA0B,CAAC;AAElD,IAAIC,aAAa,GAAGD,OAAO,CAAC,6BAA6B,CAAC;AAE1D,IAAIE,WAAW,GAAGF,OAAO,CAAC,0BAA0B,CAAC;;AAErD;AACA;AACA;AACA;AACA;AACA;AACA,SAASF,eAAe,CAACK,OAAO,EAAE;EAChC,OAAO;IACLC,KAAK,CAACC,IAAI,EAAE;MACV,MAAMC,IAAI,GAAGH,OAAO,CAACI,OAAO,EAAE;MAC9B,MAAMC,YAAY,GAAGH,IAAI,CAACG,YAAY;MAEtC,IAAIF,IAAI,EAAE;QACR,IAAI,CAAC,CAAC,EAAEJ,WAAW,CAACO,UAAU,EAAE,CAAC,CAAC,EAAEP,WAAW,CAACQ,YAAY,EAAEJ,IAAI,CAAC,CAAC,EAAE;UACpE,IAAIE,YAAY,EAAE;YAChB,MAAMG,SAAS,GAAGN,IAAI,CAACO,IAAI,CAACf,KAAK;YACjC,MAAMgB,OAAO,GAAG,CAAC,CAAC,EAAEd,QAAQ,CAACe,OAAO,EAAER,IAAI,CAAC;YAC3CH,OAAO,CAACY,WAAW,CACjB,IAAId,aAAa,CAACe,YAAY,CAC3B,UAASL,SAAU,2CAA0CE,OAAQ,qBAAoB,EAC1F;cACEI,KAAK,EAAET;YACT,CAAC,CACF,CACF;UACH;QACF,CAAC,MAAM,IAAI,CAACA,YAAY,EAAE;UACxB,MAAMG,SAAS,GAAGN,IAAI,CAACO,IAAI,CAACf,KAAK;UACjC,MAAMgB,OAAO,GAAG,CAAC,CAAC,EAAEd,QAAQ,CAACe,OAAO,EAAER,IAAI,CAAC;UAC3CH,OAAO,CAACY,WAAW,CACjB,IAAId,aAAa,CAACe,YAAY,CAC3B,UAASL,SAAU,cAAaE,OAAQ,uDAAsDF,SAAU,YAAW,EACpH;YACEM,KAAK,EAAEZ;UACT,CAAC,CACF,CACF;QACH;MACF;IACF;EACF,CAAC;AACH"},"metadata":{},"sourceType":"script","externalDependencies":[]}