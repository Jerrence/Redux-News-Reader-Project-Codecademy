{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.printIntrospectionSchema = printIntrospectionSchema;\nexports.printSchema = printSchema;\nexports.printType = printType;\nvar _inspect = require('../jsutils/inspect.js');\nvar _invariant = require('../jsutils/invariant.js');\nvar _blockString = require('../language/blockString.js');\nvar _kinds = require('../language/kinds.js');\nvar _printer = require('../language/printer.js');\nvar _definition = require('../type/definition.js');\nvar _directives = require('../type/directives.js');\nvar _introspection = require('../type/introspection.js');\nvar _scalars = require('../type/scalars.js');\nvar _astFromValue = require('./astFromValue.js');\nfunction printSchema(schema) {\n  return printFilteredSchema(schema, n => !(0, _directives.isSpecifiedDirective)(n), isDefinedType);\n}\nfunction printIntrospectionSchema(schema) {\n  return printFilteredSchema(schema, _directives.isSpecifiedDirective, _introspection.isIntrospectionType);\n}\nfunction isDefinedType(type) {\n  return !(0, _scalars.isSpecifiedScalarType)(type) && !(0, _introspection.isIntrospectionType)(type);\n}\nfunction printFilteredSchema(schema, directiveFilter, typeFilter) {\n  const directives = schema.getDirectives().filter(directiveFilter);\n  const types = Object.values(schema.getTypeMap()).filter(typeFilter);\n  return [printSchemaDefinition(schema), ...directives.map(directive => printDirective(directive)), ...types.map(type => printType(type))].filter(Boolean).join('\\n\\n');\n}\nfunction printSchemaDefinition(schema) {\n  if (schema.description == null && isSchemaOfCommonNames(schema)) {\n    return;\n  }\n  const operationTypes = [];\n  const queryType = schema.getQueryType();\n  if (queryType) {\n    operationTypes.push(`  query: ${queryType.name}`);\n  }\n  const mutationType = schema.getMutationType();\n  if (mutationType) {\n    operationTypes.push(`  mutation: ${mutationType.name}`);\n  }\n  const subscriptionType = schema.getSubscriptionType();\n  if (subscriptionType) {\n    operationTypes.push(`  subscription: ${subscriptionType.name}`);\n  }\n  return printDescription(schema) + `schema {\\n${operationTypes.join('\\n')}\\n}`;\n}\n/**\n * GraphQL schema define root types for each type of operation. These types are\n * the same as any other type and can be named in any manner, however there is\n * a common naming convention:\n *\n * ```graphql\n *   schema {\n *     query: Query\n *     mutation: Mutation\n *     subscription: Subscription\n *   }\n * ```\n *\n * When using this naming convention, the schema description can be omitted.\n */\n\nfunction isSchemaOfCommonNames(schema) {\n  const queryType = schema.getQueryType();\n  if (queryType && queryType.name !== 'Query') {\n    return false;\n  }\n  const mutationType = schema.getMutationType();\n  if (mutationType && mutationType.name !== 'Mutation') {\n    return false;\n  }\n  const subscriptionType = schema.getSubscriptionType();\n  if (subscriptionType && subscriptionType.name !== 'Subscription') {\n    return false;\n  }\n  return true;\n}\nfunction printType(type) {\n  if ((0, _definition.isScalarType)(type)) {\n    return printScalar(type);\n  }\n  if ((0, _definition.isObjectType)(type)) {\n    return printObject(type);\n  }\n  if ((0, _definition.isInterfaceType)(type)) {\n    return printInterface(type);\n  }\n  if ((0, _definition.isUnionType)(type)) {\n    return printUnion(type);\n  }\n  if ((0, _definition.isEnumType)(type)) {\n    return printEnum(type);\n  }\n  if ((0, _definition.isInputObjectType)(type)) {\n    return printInputObject(type);\n  }\n  /* c8 ignore next 3 */\n  // Not reachable, all possible types have been considered.\n\n  false || (0, _invariant.invariant)(false, 'Unexpected type: ' + (0, _inspect.inspect)(type));\n}\nfunction printScalar(type) {\n  return printDescription(type) + `scalar ${type.name}` + printSpecifiedByURL(type);\n}\nfunction printImplementedInterfaces(type) {\n  const interfaces = type.getInterfaces();\n  return interfaces.length ? ' implements ' + interfaces.map(i => i.name).join(' & ') : '';\n}\nfunction printObject(type) {\n  return printDescription(type) + `type ${type.name}` + printImplementedInterfaces(type) + printFields(type);\n}\nfunction printInterface(type) {\n  return printDescription(type) + `interface ${type.name}` + printImplementedInterfaces(type) + printFields(type);\n}\nfunction printUnion(type) {\n  const types = type.getTypes();\n  const possibleTypes = types.length ? ' = ' + types.join(' | ') : '';\n  return printDescription(type) + 'union ' + type.name + possibleTypes;\n}\nfunction printEnum(type) {\n  const values = type.getValues().map((value, i) => printDescription(value, '  ', !i) + '  ' + value.name + printDeprecated(value.deprecationReason));\n  return printDescription(type) + `enum ${type.name}` + printBlock(values);\n}\nfunction printInputObject(type) {\n  const fields = Object.values(type.getFields()).map((f, i) => printDescription(f, '  ', !i) + '  ' + printInputValue(f));\n  return printDescription(type) + `input ${type.name}` + printBlock(fields);\n}\nfunction printFields(type) {\n  const fields = Object.values(type.getFields()).map((f, i) => printDescription(f, '  ', !i) + '  ' + f.name + printArgs(f.args, '  ') + ': ' + String(f.type) + printDeprecated(f.deprecationReason));\n  return printBlock(fields);\n}\nfunction printBlock(items) {\n  return items.length !== 0 ? ' {\\n' + items.join('\\n') + '\\n}' : '';\n}\nfunction printArgs(args) {\n  let indentation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  if (args.length === 0) {\n    return '';\n  } // If every arg does not have a description, print them on one line.\n\n  if (args.every(arg => !arg.description)) {\n    return '(' + args.map(printInputValue).join(', ') + ')';\n  }\n  return '(\\n' + args.map((arg, i) => printDescription(arg, '  ' + indentation, !i) + '  ' + indentation + printInputValue(arg)).join('\\n') + '\\n' + indentation + ')';\n}\nfunction printInputValue(arg) {\n  const defaultAST = (0, _astFromValue.astFromValue)(arg.defaultValue, arg.type);\n  let argDecl = arg.name + ': ' + String(arg.type);\n  if (defaultAST) {\n    argDecl += ` = ${(0, _printer.print)(defaultAST)}`;\n  }\n  return argDecl + printDeprecated(arg.deprecationReason);\n}\nfunction printDirective(directive) {\n  return printDescription(directive) + 'directive @' + directive.name + printArgs(directive.args) + (directive.isRepeatable ? ' repeatable' : '') + ' on ' + directive.locations.join(' | ');\n}\nfunction printDeprecated(reason) {\n  if (reason == null) {\n    return '';\n  }\n  if (reason !== _directives.DEFAULT_DEPRECATION_REASON) {\n    const astValue = (0, _printer.print)({\n      kind: _kinds.Kind.STRING,\n      value: reason\n    });\n    return ` @deprecated(reason: ${astValue})`;\n  }\n  return ' @deprecated';\n}\nfunction printSpecifiedByURL(scalar) {\n  if (scalar.specifiedByURL == null) {\n    return '';\n  }\n  const astValue = (0, _printer.print)({\n    kind: _kinds.Kind.STRING,\n    value: scalar.specifiedByURL\n  });\n  return ` @specifiedBy(url: ${astValue})`;\n}\nfunction printDescription(def) {\n  let indentation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  let firstInBlock = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  const {\n    description\n  } = def;\n  if (description == null) {\n    return '';\n  }\n  const blockString = (0, _printer.print)({\n    kind: _kinds.Kind.STRING,\n    value: description,\n    block: (0, _blockString.isPrintableAsBlockString)(description)\n  });\n  const prefix = indentation && !firstInBlock ? '\\n' + indentation : indentation;\n  return prefix + blockString.replace(/\\n/g, '\\n' + indentation) + '\\n';\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","printIntrospectionSchema","printSchema","printType","_inspect","require","_invariant","_blockString","_kinds","_printer","_definition","_directives","_introspection","_scalars","_astFromValue","schema","printFilteredSchema","n","isSpecifiedDirective","isDefinedType","isIntrospectionType","type","isSpecifiedScalarType","directiveFilter","typeFilter","directives","getDirectives","filter","types","values","getTypeMap","printSchemaDefinition","map","directive","printDirective","Boolean","join","description","isSchemaOfCommonNames","operationTypes","queryType","getQueryType","push","name","mutationType","getMutationType","subscriptionType","getSubscriptionType","printDescription","isScalarType","printScalar","isObjectType","printObject","isInterfaceType","printInterface","isUnionType","printUnion","isEnumType","printEnum","isInputObjectType","printInputObject","invariant","inspect","printSpecifiedByURL","printImplementedInterfaces","interfaces","getInterfaces","length","i","printFields","getTypes","possibleTypes","getValues","printDeprecated","deprecationReason","printBlock","fields","getFields","f","printInputValue","printArgs","args","String","items","indentation","every","arg","defaultAST","astFromValue","defaultValue","argDecl","print","isRepeatable","locations","reason","DEFAULT_DEPRECATION_REASON","astValue","kind","Kind","STRING","scalar","specifiedByURL","def","firstInBlock","blockString","block","isPrintableAsBlockString","prefix","replace"],"sources":["/Users/lawrence/Documents/Codecademy/Redux News Reader (project)/node_modules/graphql/utilities/printSchema.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.printIntrospectionSchema = printIntrospectionSchema;\nexports.printSchema = printSchema;\nexports.printType = printType;\n\nvar _inspect = require('../jsutils/inspect.js');\n\nvar _invariant = require('../jsutils/invariant.js');\n\nvar _blockString = require('../language/blockString.js');\n\nvar _kinds = require('../language/kinds.js');\n\nvar _printer = require('../language/printer.js');\n\nvar _definition = require('../type/definition.js');\n\nvar _directives = require('../type/directives.js');\n\nvar _introspection = require('../type/introspection.js');\n\nvar _scalars = require('../type/scalars.js');\n\nvar _astFromValue = require('./astFromValue.js');\n\nfunction printSchema(schema) {\n  return printFilteredSchema(\n    schema,\n    (n) => !(0, _directives.isSpecifiedDirective)(n),\n    isDefinedType,\n  );\n}\n\nfunction printIntrospectionSchema(schema) {\n  return printFilteredSchema(\n    schema,\n    _directives.isSpecifiedDirective,\n    _introspection.isIntrospectionType,\n  );\n}\n\nfunction isDefinedType(type) {\n  return (\n    !(0, _scalars.isSpecifiedScalarType)(type) &&\n    !(0, _introspection.isIntrospectionType)(type)\n  );\n}\n\nfunction printFilteredSchema(schema, directiveFilter, typeFilter) {\n  const directives = schema.getDirectives().filter(directiveFilter);\n  const types = Object.values(schema.getTypeMap()).filter(typeFilter);\n  return [\n    printSchemaDefinition(schema),\n    ...directives.map((directive) => printDirective(directive)),\n    ...types.map((type) => printType(type)),\n  ]\n    .filter(Boolean)\n    .join('\\n\\n');\n}\n\nfunction printSchemaDefinition(schema) {\n  if (schema.description == null && isSchemaOfCommonNames(schema)) {\n    return;\n  }\n\n  const operationTypes = [];\n  const queryType = schema.getQueryType();\n\n  if (queryType) {\n    operationTypes.push(`  query: ${queryType.name}`);\n  }\n\n  const mutationType = schema.getMutationType();\n\n  if (mutationType) {\n    operationTypes.push(`  mutation: ${mutationType.name}`);\n  }\n\n  const subscriptionType = schema.getSubscriptionType();\n\n  if (subscriptionType) {\n    operationTypes.push(`  subscription: ${subscriptionType.name}`);\n  }\n\n  return printDescription(schema) + `schema {\\n${operationTypes.join('\\n')}\\n}`;\n}\n/**\n * GraphQL schema define root types for each type of operation. These types are\n * the same as any other type and can be named in any manner, however there is\n * a common naming convention:\n *\n * ```graphql\n *   schema {\n *     query: Query\n *     mutation: Mutation\n *     subscription: Subscription\n *   }\n * ```\n *\n * When using this naming convention, the schema description can be omitted.\n */\n\nfunction isSchemaOfCommonNames(schema) {\n  const queryType = schema.getQueryType();\n\n  if (queryType && queryType.name !== 'Query') {\n    return false;\n  }\n\n  const mutationType = schema.getMutationType();\n\n  if (mutationType && mutationType.name !== 'Mutation') {\n    return false;\n  }\n\n  const subscriptionType = schema.getSubscriptionType();\n\n  if (subscriptionType && subscriptionType.name !== 'Subscription') {\n    return false;\n  }\n\n  return true;\n}\n\nfunction printType(type) {\n  if ((0, _definition.isScalarType)(type)) {\n    return printScalar(type);\n  }\n\n  if ((0, _definition.isObjectType)(type)) {\n    return printObject(type);\n  }\n\n  if ((0, _definition.isInterfaceType)(type)) {\n    return printInterface(type);\n  }\n\n  if ((0, _definition.isUnionType)(type)) {\n    return printUnion(type);\n  }\n\n  if ((0, _definition.isEnumType)(type)) {\n    return printEnum(type);\n  }\n\n  if ((0, _definition.isInputObjectType)(type)) {\n    return printInputObject(type);\n  }\n  /* c8 ignore next 3 */\n  // Not reachable, all possible types have been considered.\n\n  false ||\n    (0, _invariant.invariant)(\n      false,\n      'Unexpected type: ' + (0, _inspect.inspect)(type),\n    );\n}\n\nfunction printScalar(type) {\n  return (\n    printDescription(type) + `scalar ${type.name}` + printSpecifiedByURL(type)\n  );\n}\n\nfunction printImplementedInterfaces(type) {\n  const interfaces = type.getInterfaces();\n  return interfaces.length\n    ? ' implements ' + interfaces.map((i) => i.name).join(' & ')\n    : '';\n}\n\nfunction printObject(type) {\n  return (\n    printDescription(type) +\n    `type ${type.name}` +\n    printImplementedInterfaces(type) +\n    printFields(type)\n  );\n}\n\nfunction printInterface(type) {\n  return (\n    printDescription(type) +\n    `interface ${type.name}` +\n    printImplementedInterfaces(type) +\n    printFields(type)\n  );\n}\n\nfunction printUnion(type) {\n  const types = type.getTypes();\n  const possibleTypes = types.length ? ' = ' + types.join(' | ') : '';\n  return printDescription(type) + 'union ' + type.name + possibleTypes;\n}\n\nfunction printEnum(type) {\n  const values = type\n    .getValues()\n    .map(\n      (value, i) =>\n        printDescription(value, '  ', !i) +\n        '  ' +\n        value.name +\n        printDeprecated(value.deprecationReason),\n    );\n  return printDescription(type) + `enum ${type.name}` + printBlock(values);\n}\n\nfunction printInputObject(type) {\n  const fields = Object.values(type.getFields()).map(\n    (f, i) => printDescription(f, '  ', !i) + '  ' + printInputValue(f),\n  );\n  return printDescription(type) + `input ${type.name}` + printBlock(fields);\n}\n\nfunction printFields(type) {\n  const fields = Object.values(type.getFields()).map(\n    (f, i) =>\n      printDescription(f, '  ', !i) +\n      '  ' +\n      f.name +\n      printArgs(f.args, '  ') +\n      ': ' +\n      String(f.type) +\n      printDeprecated(f.deprecationReason),\n  );\n  return printBlock(fields);\n}\n\nfunction printBlock(items) {\n  return items.length !== 0 ? ' {\\n' + items.join('\\n') + '\\n}' : '';\n}\n\nfunction printArgs(args, indentation = '') {\n  if (args.length === 0) {\n    return '';\n  } // If every arg does not have a description, print them on one line.\n\n  if (args.every((arg) => !arg.description)) {\n    return '(' + args.map(printInputValue).join(', ') + ')';\n  }\n\n  return (\n    '(\\n' +\n    args\n      .map(\n        (arg, i) =>\n          printDescription(arg, '  ' + indentation, !i) +\n          '  ' +\n          indentation +\n          printInputValue(arg),\n      )\n      .join('\\n') +\n    '\\n' +\n    indentation +\n    ')'\n  );\n}\n\nfunction printInputValue(arg) {\n  const defaultAST = (0, _astFromValue.astFromValue)(\n    arg.defaultValue,\n    arg.type,\n  );\n  let argDecl = arg.name + ': ' + String(arg.type);\n\n  if (defaultAST) {\n    argDecl += ` = ${(0, _printer.print)(defaultAST)}`;\n  }\n\n  return argDecl + printDeprecated(arg.deprecationReason);\n}\n\nfunction printDirective(directive) {\n  return (\n    printDescription(directive) +\n    'directive @' +\n    directive.name +\n    printArgs(directive.args) +\n    (directive.isRepeatable ? ' repeatable' : '') +\n    ' on ' +\n    directive.locations.join(' | ')\n  );\n}\n\nfunction printDeprecated(reason) {\n  if (reason == null) {\n    return '';\n  }\n\n  if (reason !== _directives.DEFAULT_DEPRECATION_REASON) {\n    const astValue = (0, _printer.print)({\n      kind: _kinds.Kind.STRING,\n      value: reason,\n    });\n    return ` @deprecated(reason: ${astValue})`;\n  }\n\n  return ' @deprecated';\n}\n\nfunction printSpecifiedByURL(scalar) {\n  if (scalar.specifiedByURL == null) {\n    return '';\n  }\n\n  const astValue = (0, _printer.print)({\n    kind: _kinds.Kind.STRING,\n    value: scalar.specifiedByURL,\n  });\n  return ` @specifiedBy(url: ${astValue})`;\n}\n\nfunction printDescription(def, indentation = '', firstInBlock = true) {\n  const { description } = def;\n\n  if (description == null) {\n    return '';\n  }\n\n  const blockString = (0, _printer.print)({\n    kind: _kinds.Kind.STRING,\n    value: description,\n    block: (0, _blockString.isPrintableAsBlockString)(description),\n  });\n  const prefix =\n    indentation && !firstInBlock ? '\\n' + indentation : indentation;\n  return prefix + blockString.replace(/\\n/g, '\\n' + indentation) + '\\n';\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}