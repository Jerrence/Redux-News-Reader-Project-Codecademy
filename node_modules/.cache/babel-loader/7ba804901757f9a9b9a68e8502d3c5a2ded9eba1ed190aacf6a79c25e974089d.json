{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MemoryLeakError = void 0;\nclass MemoryLeakError extends Error {\n  emitter;\n  type;\n  count;\n  constructor(emitter, type, count) {\n    super(`Possible EventEmitter memory leak detected. ${count} ${type.toString()} listeners added. Use emitter.setMaxListeners() to increase limit`);\n    this.emitter = emitter;\n    this.type = type;\n    this.count = count;\n    this.name = 'MaxListenersExceededWarning';\n  }\n}\nexports.MemoryLeakError = MemoryLeakError;","map":{"version":3,"names":["Object","defineProperty","exports","value","MemoryLeakError","Error","emitter","type","count","constructor","toString","name"],"sources":["/Users/lawrence/Documents/Codecademy/Redux News Reader (project)/node_modules/strict-event-emitter/lib/MemoryLeakError.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MemoryLeakError = void 0;\nclass MemoryLeakError extends Error {\n    emitter;\n    type;\n    count;\n    constructor(emitter, type, count) {\n        super(`Possible EventEmitter memory leak detected. ${count} ${type.toString()} listeners added. Use emitter.setMaxListeners() to increase limit`);\n        this.emitter = emitter;\n        this.type = type;\n        this.count = count;\n        this.name = 'MaxListenersExceededWarning';\n    }\n}\nexports.MemoryLeakError = MemoryLeakError;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,eAAe,GAAG,KAAK,CAAC;AAChC,MAAMA,eAAe,SAASC,KAAK,CAAC;EAChCC,OAAO;EACPC,IAAI;EACJC,KAAK;EACLC,WAAW,CAACH,OAAO,EAAEC,IAAI,EAAEC,KAAK,EAAE;IAC9B,KAAK,CAAE,+CAA8CA,KAAM,IAAGD,IAAI,CAACG,QAAQ,EAAG,mEAAkE,CAAC;IACjJ,IAAI,CAACJ,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACC,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACG,IAAI,GAAG,6BAA6B;EAC7C;AACJ;AACAT,OAAO,CAACE,eAAe,GAAGA,eAAe"},"metadata":{},"sourceType":"script","externalDependencies":[]}