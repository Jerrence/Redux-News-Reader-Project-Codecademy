{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.Source = void 0;\nexports.isSource = isSource;\nvar _devAssert = require('../jsutils/devAssert.js');\nvar _inspect = require('../jsutils/inspect.js');\nvar _instanceOf = require('../jsutils/instanceOf.js');\n\n/**\n * A representation of source input to GraphQL. The `name` and `locationOffset` parameters are\n * optional, but they are useful for clients who store GraphQL documents in source files.\n * For example, if the GraphQL input starts at line 40 in a file named `Foo.graphql`, it might\n * be useful for `name` to be `\"Foo.graphql\"` and location to be `{ line: 40, column: 1 }`.\n * The `line` and `column` properties in `locationOffset` are 1-indexed.\n */\nclass Source {\n  constructor(body) {\n    let name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'GraphQL request';\n    let locationOffset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n      line: 1,\n      column: 1\n    };\n    typeof body === 'string' || (0, _devAssert.devAssert)(false, `Body must be a string. Received: ${(0, _inspect.inspect)(body)}.`);\n    this.body = body;\n    this.name = name;\n    this.locationOffset = locationOffset;\n    this.locationOffset.line > 0 || (0, _devAssert.devAssert)(false, 'line in locationOffset is 1-indexed and must be positive.');\n    this.locationOffset.column > 0 || (0, _devAssert.devAssert)(false, 'column in locationOffset is 1-indexed and must be positive.');\n  }\n  get [Symbol.toStringTag]() {\n    return 'Source';\n  }\n}\n/**\n * Test if the given value is a Source object.\n *\n * @internal\n */\n\nexports.Source = Source;\nfunction isSource(source) {\n  return (0, _instanceOf.instanceOf)(source, Source);\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","Source","isSource","_devAssert","require","_inspect","_instanceOf","constructor","body","name","locationOffset","line","column","devAssert","inspect","Symbol","toStringTag","source","instanceOf"],"sources":["/Users/lawrence/Documents/Codecademy/Redux News Reader (project)/node_modules/graphql/language/source.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.Source = void 0;\nexports.isSource = isSource;\n\nvar _devAssert = require('../jsutils/devAssert.js');\n\nvar _inspect = require('../jsutils/inspect.js');\n\nvar _instanceOf = require('../jsutils/instanceOf.js');\n\n/**\n * A representation of source input to GraphQL. The `name` and `locationOffset` parameters are\n * optional, but they are useful for clients who store GraphQL documents in source files.\n * For example, if the GraphQL input starts at line 40 in a file named `Foo.graphql`, it might\n * be useful for `name` to be `\"Foo.graphql\"` and location to be `{ line: 40, column: 1 }`.\n * The `line` and `column` properties in `locationOffset` are 1-indexed.\n */\nclass Source {\n  constructor(\n    body,\n    name = 'GraphQL request',\n    locationOffset = {\n      line: 1,\n      column: 1,\n    },\n  ) {\n    typeof body === 'string' ||\n      (0, _devAssert.devAssert)(\n        false,\n        `Body must be a string. Received: ${(0, _inspect.inspect)(body)}.`,\n      );\n    this.body = body;\n    this.name = name;\n    this.locationOffset = locationOffset;\n    this.locationOffset.line > 0 ||\n      (0, _devAssert.devAssert)(\n        false,\n        'line in locationOffset is 1-indexed and must be positive.',\n      );\n    this.locationOffset.column > 0 ||\n      (0, _devAssert.devAssert)(\n        false,\n        'column in locationOffset is 1-indexed and must be positive.',\n      );\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'Source';\n  }\n}\n/**\n * Test if the given value is a Source object.\n *\n * @internal\n */\n\nexports.Source = Source;\n\nfunction isSource(source) {\n  return (0, _instanceOf.instanceOf)(source, Source);\n}\n"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,MAAM,GAAG,KAAK,CAAC;AACvBF,OAAO,CAACG,QAAQ,GAAGA,QAAQ;AAE3B,IAAIC,UAAU,GAAGC,OAAO,CAAC,yBAAyB,CAAC;AAEnD,IAAIC,QAAQ,GAAGD,OAAO,CAAC,uBAAuB,CAAC;AAE/C,IAAIE,WAAW,GAAGF,OAAO,CAAC,0BAA0B,CAAC;;AAErD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMH,MAAM,CAAC;EACXM,WAAW,CACTC,IAAI,EAMJ;IAAA,IALAC,IAAI,uEAAG,iBAAiB;IAAA,IACxBC,cAAc,uEAAG;MACfC,IAAI,EAAE,CAAC;MACPC,MAAM,EAAE;IACV,CAAC;IAED,OAAOJ,IAAI,KAAK,QAAQ,IACtB,CAAC,CAAC,EAAEL,UAAU,CAACU,SAAS,EACtB,KAAK,EACJ,oCAAmC,CAAC,CAAC,EAAER,QAAQ,CAACS,OAAO,EAAEN,IAAI,CAAE,GAAE,CACnE;IACH,IAAI,CAACA,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,cAAc,GAAGA,cAAc;IACpC,IAAI,CAACA,cAAc,CAACC,IAAI,GAAG,CAAC,IAC1B,CAAC,CAAC,EAAER,UAAU,CAACU,SAAS,EACtB,KAAK,EACL,2DAA2D,CAC5D;IACH,IAAI,CAACH,cAAc,CAACE,MAAM,GAAG,CAAC,IAC5B,CAAC,CAAC,EAAET,UAAU,CAACU,SAAS,EACtB,KAAK,EACL,6DAA6D,CAC9D;EACL;EAEA,KAAKE,MAAM,CAACC,WAAW,IAAI;IACzB,OAAO,QAAQ;EACjB;AACF;AACA;AACA;AACA;AACA;AACA;;AAEAjB,OAAO,CAACE,MAAM,GAAGA,MAAM;AAEvB,SAASC,QAAQ,CAACe,MAAM,EAAE;EACxB,OAAO,CAAC,CAAC,EAAEX,WAAW,CAACY,UAAU,EAAED,MAAM,EAAEhB,MAAM,CAAC;AACpD"},"metadata":{},"sourceType":"script","externalDependencies":[]}