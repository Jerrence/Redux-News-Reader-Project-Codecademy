{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.VariablesInAllowedPositionRule = VariablesInAllowedPositionRule;\nvar _inspect = require('../../jsutils/inspect.js');\nvar _GraphQLError = require('../../error/GraphQLError.js');\nvar _kinds = require('../../language/kinds.js');\nvar _definition = require('../../type/definition.js');\nvar _typeComparators = require('../../utilities/typeComparators.js');\nvar _typeFromAST = require('../../utilities/typeFromAST.js');\n\n/**\n * Variables in allowed position\n *\n * Variable usages must be compatible with the arguments they are passed to.\n *\n * See https://spec.graphql.org/draft/#sec-All-Variable-Usages-are-Allowed\n */\nfunction VariablesInAllowedPositionRule(context) {\n  let varDefMap = Object.create(null);\n  return {\n    OperationDefinition: {\n      enter() {\n        varDefMap = Object.create(null);\n      },\n      leave(operation) {\n        const usages = context.getRecursiveVariableUsages(operation);\n        for (const {\n          node,\n          type,\n          defaultValue\n        } of usages) {\n          const varName = node.name.value;\n          const varDef = varDefMap[varName];\n          if (varDef && type) {\n            // A var type is allowed if it is the same or more strict (e.g. is\n            // a subtype of) than the expected type. It can be more strict if\n            // the variable type is non-null when the expected type is nullable.\n            // If both are list types, the variable item type can be more strict\n            // than the expected item type (contravariant).\n            const schema = context.getSchema();\n            const varType = (0, _typeFromAST.typeFromAST)(schema, varDef.type);\n            if (varType && !allowedVariableUsage(schema, varType, varDef.defaultValue, type, defaultValue)) {\n              const varTypeStr = (0, _inspect.inspect)(varType);\n              const typeStr = (0, _inspect.inspect)(type);\n              context.reportError(new _GraphQLError.GraphQLError(`Variable \"$${varName}\" of type \"${varTypeStr}\" used in position expecting type \"${typeStr}\".`, {\n                nodes: [varDef, node]\n              }));\n            }\n          }\n        }\n      }\n    },\n    VariableDefinition(node) {\n      varDefMap[node.variable.name.value] = node;\n    }\n  };\n}\n/**\n * Returns true if the variable is allowed in the location it was found,\n * which includes considering if default values exist for either the variable\n * or the location at which it is located.\n */\n\nfunction allowedVariableUsage(schema, varType, varDefaultValue, locationType, locationDefaultValue) {\n  if ((0, _definition.isNonNullType)(locationType) && !(0, _definition.isNonNullType)(varType)) {\n    const hasNonNullVariableDefaultValue = varDefaultValue != null && varDefaultValue.kind !== _kinds.Kind.NULL;\n    const hasLocationDefaultValue = locationDefaultValue !== undefined;\n    if (!hasNonNullVariableDefaultValue && !hasLocationDefaultValue) {\n      return false;\n    }\n    const nullableLocationType = locationType.ofType;\n    return (0, _typeComparators.isTypeSubTypeOf)(schema, varType, nullableLocationType);\n  }\n  return (0, _typeComparators.isTypeSubTypeOf)(schema, varType, locationType);\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","VariablesInAllowedPositionRule","_inspect","require","_GraphQLError","_kinds","_definition","_typeComparators","_typeFromAST","context","varDefMap","create","OperationDefinition","enter","leave","operation","usages","getRecursiveVariableUsages","node","type","defaultValue","varName","name","varDef","schema","getSchema","varType","typeFromAST","allowedVariableUsage","varTypeStr","inspect","typeStr","reportError","GraphQLError","nodes","VariableDefinition","variable","varDefaultValue","locationType","locationDefaultValue","isNonNullType","hasNonNullVariableDefaultValue","kind","Kind","NULL","hasLocationDefaultValue","undefined","nullableLocationType","ofType","isTypeSubTypeOf"],"sources":["/Users/lawrence/Documents/Codecademy/Redux News Reader (project)/node_modules/graphql/validation/rules/VariablesInAllowedPositionRule.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.VariablesInAllowedPositionRule = VariablesInAllowedPositionRule;\n\nvar _inspect = require('../../jsutils/inspect.js');\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\nvar _kinds = require('../../language/kinds.js');\n\nvar _definition = require('../../type/definition.js');\n\nvar _typeComparators = require('../../utilities/typeComparators.js');\n\nvar _typeFromAST = require('../../utilities/typeFromAST.js');\n\n/**\n * Variables in allowed position\n *\n * Variable usages must be compatible with the arguments they are passed to.\n *\n * See https://spec.graphql.org/draft/#sec-All-Variable-Usages-are-Allowed\n */\nfunction VariablesInAllowedPositionRule(context) {\n  let varDefMap = Object.create(null);\n  return {\n    OperationDefinition: {\n      enter() {\n        varDefMap = Object.create(null);\n      },\n\n      leave(operation) {\n        const usages = context.getRecursiveVariableUsages(operation);\n\n        for (const { node, type, defaultValue } of usages) {\n          const varName = node.name.value;\n          const varDef = varDefMap[varName];\n\n          if (varDef && type) {\n            // A var type is allowed if it is the same or more strict (e.g. is\n            // a subtype of) than the expected type. It can be more strict if\n            // the variable type is non-null when the expected type is nullable.\n            // If both are list types, the variable item type can be more strict\n            // than the expected item type (contravariant).\n            const schema = context.getSchema();\n            const varType = (0, _typeFromAST.typeFromAST)(schema, varDef.type);\n\n            if (\n              varType &&\n              !allowedVariableUsage(\n                schema,\n                varType,\n                varDef.defaultValue,\n                type,\n                defaultValue,\n              )\n            ) {\n              const varTypeStr = (0, _inspect.inspect)(varType);\n              const typeStr = (0, _inspect.inspect)(type);\n              context.reportError(\n                new _GraphQLError.GraphQLError(\n                  `Variable \"$${varName}\" of type \"${varTypeStr}\" used in position expecting type \"${typeStr}\".`,\n                  {\n                    nodes: [varDef, node],\n                  },\n                ),\n              );\n            }\n          }\n        }\n      },\n    },\n\n    VariableDefinition(node) {\n      varDefMap[node.variable.name.value] = node;\n    },\n  };\n}\n/**\n * Returns true if the variable is allowed in the location it was found,\n * which includes considering if default values exist for either the variable\n * or the location at which it is located.\n */\n\nfunction allowedVariableUsage(\n  schema,\n  varType,\n  varDefaultValue,\n  locationType,\n  locationDefaultValue,\n) {\n  if (\n    (0, _definition.isNonNullType)(locationType) &&\n    !(0, _definition.isNonNullType)(varType)\n  ) {\n    const hasNonNullVariableDefaultValue =\n      varDefaultValue != null && varDefaultValue.kind !== _kinds.Kind.NULL;\n    const hasLocationDefaultValue = locationDefaultValue !== undefined;\n\n    if (!hasNonNullVariableDefaultValue && !hasLocationDefaultValue) {\n      return false;\n    }\n\n    const nullableLocationType = locationType.ofType;\n    return (0, _typeComparators.isTypeSubTypeOf)(\n      schema,\n      varType,\n      nullableLocationType,\n    );\n  }\n\n  return (0, _typeComparators.isTypeSubTypeOf)(schema, varType, locationType);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}