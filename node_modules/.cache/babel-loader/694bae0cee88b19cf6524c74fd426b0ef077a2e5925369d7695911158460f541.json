{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.UniqueEnumValueNamesRule = UniqueEnumValueNamesRule;\nvar _GraphQLError = require('../../error/GraphQLError.js');\nvar _definition = require('../../type/definition.js');\n\n/**\n * Unique enum value names\n *\n * A GraphQL enum type is only valid if all its values are uniquely named.\n */\nfunction UniqueEnumValueNamesRule(context) {\n  const schema = context.getSchema();\n  const existingTypeMap = schema ? schema.getTypeMap() : Object.create(null);\n  const knownValueNames = Object.create(null);\n  return {\n    EnumTypeDefinition: checkValueUniqueness,\n    EnumTypeExtension: checkValueUniqueness\n  };\n  function checkValueUniqueness(node) {\n    var _node$values;\n    const typeName = node.name.value;\n    if (!knownValueNames[typeName]) {\n      knownValueNames[typeName] = Object.create(null);\n    } // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n    /* c8 ignore next */\n\n    const valueNodes = (_node$values = node.values) !== null && _node$values !== void 0 ? _node$values : [];\n    const valueNames = knownValueNames[typeName];\n    for (const valueDef of valueNodes) {\n      const valueName = valueDef.name.value;\n      const existingType = existingTypeMap[typeName];\n      if ((0, _definition.isEnumType)(existingType) && existingType.getValue(valueName)) {\n        context.reportError(new _GraphQLError.GraphQLError(`Enum value \"${typeName}.${valueName}\" already exists in the schema. It cannot also be defined in this type extension.`, {\n          nodes: valueDef.name\n        }));\n      } else if (valueNames[valueName]) {\n        context.reportError(new _GraphQLError.GraphQLError(`Enum value \"${typeName}.${valueName}\" can only be defined once.`, {\n          nodes: [valueNames[valueName], valueDef.name]\n        }));\n      } else {\n        valueNames[valueName] = valueDef.name;\n      }\n    }\n    return false;\n  }\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","UniqueEnumValueNamesRule","_GraphQLError","require","_definition","context","schema","getSchema","existingTypeMap","getTypeMap","create","knownValueNames","EnumTypeDefinition","checkValueUniqueness","EnumTypeExtension","node","_node$values","typeName","name","valueNodes","values","valueNames","valueDef","valueName","existingType","isEnumType","getValue","reportError","GraphQLError","nodes"],"sources":["/Users/lawrence/Documents/Codecademy/Redux News Reader (project)/node_modules/graphql/validation/rules/UniqueEnumValueNamesRule.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.UniqueEnumValueNamesRule = UniqueEnumValueNamesRule;\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\nvar _definition = require('../../type/definition.js');\n\n/**\n * Unique enum value names\n *\n * A GraphQL enum type is only valid if all its values are uniquely named.\n */\nfunction UniqueEnumValueNamesRule(context) {\n  const schema = context.getSchema();\n  const existingTypeMap = schema ? schema.getTypeMap() : Object.create(null);\n  const knownValueNames = Object.create(null);\n  return {\n    EnumTypeDefinition: checkValueUniqueness,\n    EnumTypeExtension: checkValueUniqueness,\n  };\n\n  function checkValueUniqueness(node) {\n    var _node$values;\n\n    const typeName = node.name.value;\n\n    if (!knownValueNames[typeName]) {\n      knownValueNames[typeName] = Object.create(null);\n    } // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n    /* c8 ignore next */\n\n    const valueNodes =\n      (_node$values = node.values) !== null && _node$values !== void 0\n        ? _node$values\n        : [];\n    const valueNames = knownValueNames[typeName];\n\n    for (const valueDef of valueNodes) {\n      const valueName = valueDef.name.value;\n      const existingType = existingTypeMap[typeName];\n\n      if (\n        (0, _definition.isEnumType)(existingType) &&\n        existingType.getValue(valueName)\n      ) {\n        context.reportError(\n          new _GraphQLError.GraphQLError(\n            `Enum value \"${typeName}.${valueName}\" already exists in the schema. It cannot also be defined in this type extension.`,\n            {\n              nodes: valueDef.name,\n            },\n          ),\n        );\n      } else if (valueNames[valueName]) {\n        context.reportError(\n          new _GraphQLError.GraphQLError(\n            `Enum value \"${typeName}.${valueName}\" can only be defined once.`,\n            {\n              nodes: [valueNames[valueName], valueDef.name],\n            },\n          ),\n        );\n      } else {\n        valueNames[valueName] = valueDef.name;\n      }\n    }\n\n    return false;\n  }\n}\n"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,wBAAwB,GAAGA,wBAAwB;AAE3D,IAAIC,aAAa,GAAGC,OAAO,CAAC,6BAA6B,CAAC;AAE1D,IAAIC,WAAW,GAAGD,OAAO,CAAC,0BAA0B,CAAC;;AAErD;AACA;AACA;AACA;AACA;AACA,SAASF,wBAAwB,CAACI,OAAO,EAAE;EACzC,MAAMC,MAAM,GAAGD,OAAO,CAACE,SAAS,EAAE;EAClC,MAAMC,eAAe,GAAGF,MAAM,GAAGA,MAAM,CAACG,UAAU,EAAE,GAAGZ,MAAM,CAACa,MAAM,CAAC,IAAI,CAAC;EAC1E,MAAMC,eAAe,GAAGd,MAAM,CAACa,MAAM,CAAC,IAAI,CAAC;EAC3C,OAAO;IACLE,kBAAkB,EAAEC,oBAAoB;IACxCC,iBAAiB,EAAED;EACrB,CAAC;EAED,SAASA,oBAAoB,CAACE,IAAI,EAAE;IAClC,IAAIC,YAAY;IAEhB,MAAMC,QAAQ,GAAGF,IAAI,CAACG,IAAI,CAAClB,KAAK;IAEhC,IAAI,CAACW,eAAe,CAACM,QAAQ,CAAC,EAAE;MAC9BN,eAAe,CAACM,QAAQ,CAAC,GAAGpB,MAAM,CAACa,MAAM,CAAC,IAAI,CAAC;IACjD,CAAC,CAAC;;IAEF;;IAEA,MAAMS,UAAU,GACd,CAACH,YAAY,GAAGD,IAAI,CAACK,MAAM,MAAM,IAAI,IAAIJ,YAAY,KAAK,KAAK,CAAC,GAC5DA,YAAY,GACZ,EAAE;IACR,MAAMK,UAAU,GAAGV,eAAe,CAACM,QAAQ,CAAC;IAE5C,KAAK,MAAMK,QAAQ,IAAIH,UAAU,EAAE;MACjC,MAAMI,SAAS,GAAGD,QAAQ,CAACJ,IAAI,CAAClB,KAAK;MACrC,MAAMwB,YAAY,GAAGhB,eAAe,CAACS,QAAQ,CAAC;MAE9C,IACE,CAAC,CAAC,EAAEb,WAAW,CAACqB,UAAU,EAAED,YAAY,CAAC,IACzCA,YAAY,CAACE,QAAQ,CAACH,SAAS,CAAC,EAChC;QACAlB,OAAO,CAACsB,WAAW,CACjB,IAAIzB,aAAa,CAAC0B,YAAY,CAC3B,eAAcX,QAAS,IAAGM,SAAU,mFAAkF,EACvH;UACEM,KAAK,EAAEP,QAAQ,CAACJ;QAClB,CAAC,CACF,CACF;MACH,CAAC,MAAM,IAAIG,UAAU,CAACE,SAAS,CAAC,EAAE;QAChClB,OAAO,CAACsB,WAAW,CACjB,IAAIzB,aAAa,CAAC0B,YAAY,CAC3B,eAAcX,QAAS,IAAGM,SAAU,6BAA4B,EACjE;UACEM,KAAK,EAAE,CAACR,UAAU,CAACE,SAAS,CAAC,EAAED,QAAQ,CAACJ,IAAI;QAC9C,CAAC,CACF,CACF;MACH,CAAC,MAAM;QACLG,UAAU,CAACE,SAAS,CAAC,GAAGD,QAAQ,CAACJ,IAAI;MACvC;IACF;IAEA,OAAO,KAAK;EACd;AACF"},"metadata":{},"sourceType":"script","externalDependencies":[]}