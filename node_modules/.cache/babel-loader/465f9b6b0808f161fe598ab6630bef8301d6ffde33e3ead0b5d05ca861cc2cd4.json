{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.assertEnumValueName = assertEnumValueName;\nexports.assertName = assertName;\nvar _devAssert = require('../jsutils/devAssert.js');\nvar _GraphQLError = require('../error/GraphQLError.js');\nvar _characterClasses = require('../language/characterClasses.js');\n\n/**\n * Upholds the spec rules about naming.\n */\nfunction assertName(name) {\n  name != null || (0, _devAssert.devAssert)(false, 'Must provide name.');\n  typeof name === 'string' || (0, _devAssert.devAssert)(false, 'Expected name to be a string.');\n  if (name.length === 0) {\n    throw new _GraphQLError.GraphQLError('Expected name to be a non-empty string.');\n  }\n  for (let i = 1; i < name.length; ++i) {\n    if (!(0, _characterClasses.isNameContinue)(name.charCodeAt(i))) {\n      throw new _GraphQLError.GraphQLError(`Names must only contain [_a-zA-Z0-9] but \"${name}\" does not.`);\n    }\n  }\n  if (!(0, _characterClasses.isNameStart)(name.charCodeAt(0))) {\n    throw new _GraphQLError.GraphQLError(`Names must start with [_a-zA-Z] but \"${name}\" does not.`);\n  }\n  return name;\n}\n/**\n * Upholds the spec rules about naming enum values.\n *\n * @internal\n */\n\nfunction assertEnumValueName(name) {\n  if (name === 'true' || name === 'false' || name === 'null') {\n    throw new _GraphQLError.GraphQLError(`Enum values cannot be named: ${name}`);\n  }\n  return assertName(name);\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","assertEnumValueName","assertName","_devAssert","require","_GraphQLError","_characterClasses","name","devAssert","length","GraphQLError","i","isNameContinue","charCodeAt","isNameStart"],"sources":["/Users/lawrence/Documents/Codecademy/Redux News Reader (project)/node_modules/graphql/type/assertName.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.assertEnumValueName = assertEnumValueName;\nexports.assertName = assertName;\n\nvar _devAssert = require('../jsutils/devAssert.js');\n\nvar _GraphQLError = require('../error/GraphQLError.js');\n\nvar _characterClasses = require('../language/characterClasses.js');\n\n/**\n * Upholds the spec rules about naming.\n */\nfunction assertName(name) {\n  name != null || (0, _devAssert.devAssert)(false, 'Must provide name.');\n  typeof name === 'string' ||\n    (0, _devAssert.devAssert)(false, 'Expected name to be a string.');\n\n  if (name.length === 0) {\n    throw new _GraphQLError.GraphQLError(\n      'Expected name to be a non-empty string.',\n    );\n  }\n\n  for (let i = 1; i < name.length; ++i) {\n    if (!(0, _characterClasses.isNameContinue)(name.charCodeAt(i))) {\n      throw new _GraphQLError.GraphQLError(\n        `Names must only contain [_a-zA-Z0-9] but \"${name}\" does not.`,\n      );\n    }\n  }\n\n  if (!(0, _characterClasses.isNameStart)(name.charCodeAt(0))) {\n    throw new _GraphQLError.GraphQLError(\n      `Names must start with [_a-zA-Z] but \"${name}\" does not.`,\n    );\n  }\n\n  return name;\n}\n/**\n * Upholds the spec rules about naming enum values.\n *\n * @internal\n */\n\nfunction assertEnumValueName(name) {\n  if (name === 'true' || name === 'false' || name === 'null') {\n    throw new _GraphQLError.GraphQLError(\n      `Enum values cannot be named: ${name}`,\n    );\n  }\n\n  return assertName(name);\n}\n"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,mBAAmB,GAAGA,mBAAmB;AACjDF,OAAO,CAACG,UAAU,GAAGA,UAAU;AAE/B,IAAIC,UAAU,GAAGC,OAAO,CAAC,yBAAyB,CAAC;AAEnD,IAAIC,aAAa,GAAGD,OAAO,CAAC,0BAA0B,CAAC;AAEvD,IAAIE,iBAAiB,GAAGF,OAAO,CAAC,iCAAiC,CAAC;;AAElE;AACA;AACA;AACA,SAASF,UAAU,CAACK,IAAI,EAAE;EACxBA,IAAI,IAAI,IAAI,IAAI,CAAC,CAAC,EAAEJ,UAAU,CAACK,SAAS,EAAE,KAAK,EAAE,oBAAoB,CAAC;EACtE,OAAOD,IAAI,KAAK,QAAQ,IACtB,CAAC,CAAC,EAAEJ,UAAU,CAACK,SAAS,EAAE,KAAK,EAAE,+BAA+B,CAAC;EAEnE,IAAID,IAAI,CAACE,MAAM,KAAK,CAAC,EAAE;IACrB,MAAM,IAAIJ,aAAa,CAACK,YAAY,CAClC,yCAAyC,CAC1C;EACH;EAEA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,IAAI,CAACE,MAAM,EAAE,EAAEE,CAAC,EAAE;IACpC,IAAI,CAAC,CAAC,CAAC,EAAEL,iBAAiB,CAACM,cAAc,EAAEL,IAAI,CAACM,UAAU,CAACF,CAAC,CAAC,CAAC,EAAE;MAC9D,MAAM,IAAIN,aAAa,CAACK,YAAY,CACjC,6CAA4CH,IAAK,aAAY,CAC/D;IACH;EACF;EAEA,IAAI,CAAC,CAAC,CAAC,EAAED,iBAAiB,CAACQ,WAAW,EAAEP,IAAI,CAACM,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE;IAC3D,MAAM,IAAIR,aAAa,CAACK,YAAY,CACjC,wCAAuCH,IAAK,aAAY,CAC1D;EACH;EAEA,OAAOA,IAAI;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASN,mBAAmB,CAACM,IAAI,EAAE;EACjC,IAAIA,IAAI,KAAK,MAAM,IAAIA,IAAI,KAAK,OAAO,IAAIA,IAAI,KAAK,MAAM,EAAE;IAC1D,MAAM,IAAIF,aAAa,CAACK,YAAY,CACjC,gCAA+BH,IAAK,EAAC,CACvC;EACH;EAEA,OAAOL,UAAU,CAACK,IAAI,CAAC;AACzB"},"metadata":{},"sourceType":"script","externalDependencies":[]}