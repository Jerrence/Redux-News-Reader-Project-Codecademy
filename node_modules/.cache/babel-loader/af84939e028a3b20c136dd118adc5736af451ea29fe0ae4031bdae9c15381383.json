{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.valueFromASTUntyped = valueFromASTUntyped;\nvar _keyValMap = require('../jsutils/keyValMap.js');\nvar _kinds = require('../language/kinds.js');\n\n/**\n * Produces a JavaScript value given a GraphQL Value AST.\n *\n * Unlike `valueFromAST()`, no type is provided. The resulting JavaScript value\n * will reflect the provided GraphQL value AST.\n *\n * | GraphQL Value        | JavaScript Value |\n * | -------------------- | ---------------- |\n * | Input Object         | Object           |\n * | List                 | Array            |\n * | Boolean              | Boolean          |\n * | String / Enum        | String           |\n * | Int / Float          | Number           |\n * | Null                 | null             |\n *\n */\nfunction valueFromASTUntyped(valueNode, variables) {\n  switch (valueNode.kind) {\n    case _kinds.Kind.NULL:\n      return null;\n    case _kinds.Kind.INT:\n      return parseInt(valueNode.value, 10);\n    case _kinds.Kind.FLOAT:\n      return parseFloat(valueNode.value);\n    case _kinds.Kind.STRING:\n    case _kinds.Kind.ENUM:\n    case _kinds.Kind.BOOLEAN:\n      return valueNode.value;\n    case _kinds.Kind.LIST:\n      return valueNode.values.map(node => valueFromASTUntyped(node, variables));\n    case _kinds.Kind.OBJECT:\n      return (0, _keyValMap.keyValMap)(valueNode.fields, field => field.name.value, field => valueFromASTUntyped(field.value, variables));\n    case _kinds.Kind.VARIABLE:\n      return variables === null || variables === void 0 ? void 0 : variables[valueNode.name.value];\n  }\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","valueFromASTUntyped","_keyValMap","require","_kinds","valueNode","variables","kind","Kind","NULL","INT","parseInt","FLOAT","parseFloat","STRING","ENUM","BOOLEAN","LIST","values","map","node","OBJECT","keyValMap","fields","field","name","VARIABLE"],"sources":["/Users/lawrence/Documents/Codecademy/Redux News Reader (project)/node_modules/graphql/utilities/valueFromASTUntyped.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.valueFromASTUntyped = valueFromASTUntyped;\n\nvar _keyValMap = require('../jsutils/keyValMap.js');\n\nvar _kinds = require('../language/kinds.js');\n\n/**\n * Produces a JavaScript value given a GraphQL Value AST.\n *\n * Unlike `valueFromAST()`, no type is provided. The resulting JavaScript value\n * will reflect the provided GraphQL value AST.\n *\n * | GraphQL Value        | JavaScript Value |\n * | -------------------- | ---------------- |\n * | Input Object         | Object           |\n * | List                 | Array            |\n * | Boolean              | Boolean          |\n * | String / Enum        | String           |\n * | Int / Float          | Number           |\n * | Null                 | null             |\n *\n */\nfunction valueFromASTUntyped(valueNode, variables) {\n  switch (valueNode.kind) {\n    case _kinds.Kind.NULL:\n      return null;\n\n    case _kinds.Kind.INT:\n      return parseInt(valueNode.value, 10);\n\n    case _kinds.Kind.FLOAT:\n      return parseFloat(valueNode.value);\n\n    case _kinds.Kind.STRING:\n    case _kinds.Kind.ENUM:\n    case _kinds.Kind.BOOLEAN:\n      return valueNode.value;\n\n    case _kinds.Kind.LIST:\n      return valueNode.values.map((node) =>\n        valueFromASTUntyped(node, variables),\n      );\n\n    case _kinds.Kind.OBJECT:\n      return (0, _keyValMap.keyValMap)(\n        valueNode.fields,\n        (field) => field.name.value,\n        (field) => valueFromASTUntyped(field.value, variables),\n      );\n\n    case _kinds.Kind.VARIABLE:\n      return variables === null || variables === void 0\n        ? void 0\n        : variables[valueNode.name.value];\n  }\n}\n"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,mBAAmB,GAAGA,mBAAmB;AAEjD,IAAIC,UAAU,GAAGC,OAAO,CAAC,yBAAyB,CAAC;AAEnD,IAAIC,MAAM,GAAGD,OAAO,CAAC,sBAAsB,CAAC;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASF,mBAAmB,CAACI,SAAS,EAAEC,SAAS,EAAE;EACjD,QAAQD,SAAS,CAACE,IAAI;IACpB,KAAKH,MAAM,CAACI,IAAI,CAACC,IAAI;MACnB,OAAO,IAAI;IAEb,KAAKL,MAAM,CAACI,IAAI,CAACE,GAAG;MAClB,OAAOC,QAAQ,CAACN,SAAS,CAACL,KAAK,EAAE,EAAE,CAAC;IAEtC,KAAKI,MAAM,CAACI,IAAI,CAACI,KAAK;MACpB,OAAOC,UAAU,CAACR,SAAS,CAACL,KAAK,CAAC;IAEpC,KAAKI,MAAM,CAACI,IAAI,CAACM,MAAM;IACvB,KAAKV,MAAM,CAACI,IAAI,CAACO,IAAI;IACrB,KAAKX,MAAM,CAACI,IAAI,CAACQ,OAAO;MACtB,OAAOX,SAAS,CAACL,KAAK;IAExB,KAAKI,MAAM,CAACI,IAAI,CAACS,IAAI;MACnB,OAAOZ,SAAS,CAACa,MAAM,CAACC,GAAG,CAAEC,IAAI,IAC/BnB,mBAAmB,CAACmB,IAAI,EAAEd,SAAS,CAAC,CACrC;IAEH,KAAKF,MAAM,CAACI,IAAI,CAACa,MAAM;MACrB,OAAO,CAAC,CAAC,EAAEnB,UAAU,CAACoB,SAAS,EAC7BjB,SAAS,CAACkB,MAAM,EACfC,KAAK,IAAKA,KAAK,CAACC,IAAI,CAACzB,KAAK,EAC1BwB,KAAK,IAAKvB,mBAAmB,CAACuB,KAAK,CAACxB,KAAK,EAAEM,SAAS,CAAC,CACvD;IAEH,KAAKF,MAAM,CAACI,IAAI,CAACkB,QAAQ;MACvB,OAAOpB,SAAS,KAAK,IAAI,IAAIA,SAAS,KAAK,KAAK,CAAC,GAC7C,KAAK,CAAC,GACNA,SAAS,CAACD,SAAS,CAACoB,IAAI,CAACzB,KAAK,CAAC;EAAC;AAE1C"},"metadata":{},"sourceType":"script","externalDependencies":[]}