{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.ProvidedRequiredArgumentsOnDirectivesRule = ProvidedRequiredArgumentsOnDirectivesRule;\nexports.ProvidedRequiredArgumentsRule = ProvidedRequiredArgumentsRule;\nvar _inspect = require('../../jsutils/inspect.js');\nvar _keyMap = require('../../jsutils/keyMap.js');\nvar _GraphQLError = require('../../error/GraphQLError.js');\nvar _kinds = require('../../language/kinds.js');\nvar _printer = require('../../language/printer.js');\nvar _definition = require('../../type/definition.js');\nvar _directives = require('../../type/directives.js');\n\n/**\n * Provided required arguments\n *\n * A field or directive is only valid if all required (non-null without a\n * default value) field arguments have been provided.\n */\nfunction ProvidedRequiredArgumentsRule(context) {\n  return {\n    // eslint-disable-next-line new-cap\n    ...ProvidedRequiredArgumentsOnDirectivesRule(context),\n    Field: {\n      // Validate on leave to allow for deeper errors to appear first.\n      leave(fieldNode) {\n        var _fieldNode$arguments;\n        const fieldDef = context.getFieldDef();\n        if (!fieldDef) {\n          return false;\n        }\n        const providedArgs = new Set(\n        // FIXME: https://github.com/graphql/graphql-js/issues/2203\n        /* c8 ignore next */\n        (_fieldNode$arguments = fieldNode.arguments) === null || _fieldNode$arguments === void 0 ? void 0 : _fieldNode$arguments.map(arg => arg.name.value));\n        for (const argDef of fieldDef.args) {\n          if (!providedArgs.has(argDef.name) && (0, _definition.isRequiredArgument)(argDef)) {\n            const argTypeStr = (0, _inspect.inspect)(argDef.type);\n            context.reportError(new _GraphQLError.GraphQLError(`Field \"${fieldDef.name}\" argument \"${argDef.name}\" of type \"${argTypeStr}\" is required, but it was not provided.`, {\n              nodes: fieldNode\n            }));\n          }\n        }\n      }\n    }\n  };\n}\n/**\n * @internal\n */\n\nfunction ProvidedRequiredArgumentsOnDirectivesRule(context) {\n  var _schema$getDirectives;\n  const requiredArgsMap = Object.create(null);\n  const schema = context.getSchema();\n  const definedDirectives = (_schema$getDirectives = schema === null || schema === void 0 ? void 0 : schema.getDirectives()) !== null && _schema$getDirectives !== void 0 ? _schema$getDirectives : _directives.specifiedDirectives;\n  for (const directive of definedDirectives) {\n    requiredArgsMap[directive.name] = (0, _keyMap.keyMap)(directive.args.filter(_definition.isRequiredArgument), arg => arg.name);\n  }\n  const astDefinitions = context.getDocument().definitions;\n  for (const def of astDefinitions) {\n    if (def.kind === _kinds.Kind.DIRECTIVE_DEFINITION) {\n      var _def$arguments;\n\n      // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n      /* c8 ignore next */\n      const argNodes = (_def$arguments = def.arguments) !== null && _def$arguments !== void 0 ? _def$arguments : [];\n      requiredArgsMap[def.name.value] = (0, _keyMap.keyMap)(argNodes.filter(isRequiredArgumentNode), arg => arg.name.value);\n    }\n  }\n  return {\n    Directive: {\n      // Validate on leave to allow for deeper errors to appear first.\n      leave(directiveNode) {\n        const directiveName = directiveNode.name.value;\n        const requiredArgs = requiredArgsMap[directiveName];\n        if (requiredArgs) {\n          var _directiveNode$argume;\n\n          // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n          /* c8 ignore next */\n          const argNodes = (_directiveNode$argume = directiveNode.arguments) !== null && _directiveNode$argume !== void 0 ? _directiveNode$argume : [];\n          const argNodeMap = new Set(argNodes.map(arg => arg.name.value));\n          for (const [argName, argDef] of Object.entries(requiredArgs)) {\n            if (!argNodeMap.has(argName)) {\n              const argType = (0, _definition.isType)(argDef.type) ? (0, _inspect.inspect)(argDef.type) : (0, _printer.print)(argDef.type);\n              context.reportError(new _GraphQLError.GraphQLError(`Directive \"@${directiveName}\" argument \"${argName}\" of type \"${argType}\" is required, but it was not provided.`, {\n                nodes: directiveNode\n              }));\n            }\n          }\n        }\n      }\n    }\n  };\n}\nfunction isRequiredArgumentNode(arg) {\n  return arg.type.kind === _kinds.Kind.NON_NULL_TYPE && arg.defaultValue == null;\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","ProvidedRequiredArgumentsOnDirectivesRule","ProvidedRequiredArgumentsRule","_inspect","require","_keyMap","_GraphQLError","_kinds","_printer","_definition","_directives","context","Field","leave","fieldNode","_fieldNode$arguments","fieldDef","getFieldDef","providedArgs","Set","arguments","map","arg","name","argDef","args","has","isRequiredArgument","argTypeStr","inspect","type","reportError","GraphQLError","nodes","_schema$getDirectives","requiredArgsMap","create","schema","getSchema","definedDirectives","getDirectives","specifiedDirectives","directive","keyMap","filter","astDefinitions","getDocument","definitions","def","kind","Kind","DIRECTIVE_DEFINITION","_def$arguments","argNodes","isRequiredArgumentNode","Directive","directiveNode","directiveName","requiredArgs","_directiveNode$argume","argNodeMap","argName","entries","argType","isType","print","NON_NULL_TYPE","defaultValue"],"sources":["/Users/lawrence/Documents/Codecademy/Redux News Reader (project)/node_modules/graphql/validation/rules/ProvidedRequiredArgumentsRule.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.ProvidedRequiredArgumentsOnDirectivesRule =\n  ProvidedRequiredArgumentsOnDirectivesRule;\nexports.ProvidedRequiredArgumentsRule = ProvidedRequiredArgumentsRule;\n\nvar _inspect = require('../../jsutils/inspect.js');\n\nvar _keyMap = require('../../jsutils/keyMap.js');\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\nvar _kinds = require('../../language/kinds.js');\n\nvar _printer = require('../../language/printer.js');\n\nvar _definition = require('../../type/definition.js');\n\nvar _directives = require('../../type/directives.js');\n\n/**\n * Provided required arguments\n *\n * A field or directive is only valid if all required (non-null without a\n * default value) field arguments have been provided.\n */\nfunction ProvidedRequiredArgumentsRule(context) {\n  return {\n    // eslint-disable-next-line new-cap\n    ...ProvidedRequiredArgumentsOnDirectivesRule(context),\n    Field: {\n      // Validate on leave to allow for deeper errors to appear first.\n      leave(fieldNode) {\n        var _fieldNode$arguments;\n\n        const fieldDef = context.getFieldDef();\n\n        if (!fieldDef) {\n          return false;\n        }\n\n        const providedArgs = new Set( // FIXME: https://github.com/graphql/graphql-js/issues/2203\n          /* c8 ignore next */\n          (_fieldNode$arguments = fieldNode.arguments) === null ||\n          _fieldNode$arguments === void 0\n            ? void 0\n            : _fieldNode$arguments.map((arg) => arg.name.value),\n        );\n\n        for (const argDef of fieldDef.args) {\n          if (\n            !providedArgs.has(argDef.name) &&\n            (0, _definition.isRequiredArgument)(argDef)\n          ) {\n            const argTypeStr = (0, _inspect.inspect)(argDef.type);\n            context.reportError(\n              new _GraphQLError.GraphQLError(\n                `Field \"${fieldDef.name}\" argument \"${argDef.name}\" of type \"${argTypeStr}\" is required, but it was not provided.`,\n                {\n                  nodes: fieldNode,\n                },\n              ),\n            );\n          }\n        }\n      },\n    },\n  };\n}\n/**\n * @internal\n */\n\nfunction ProvidedRequiredArgumentsOnDirectivesRule(context) {\n  var _schema$getDirectives;\n\n  const requiredArgsMap = Object.create(null);\n  const schema = context.getSchema();\n  const definedDirectives =\n    (_schema$getDirectives =\n      schema === null || schema === void 0\n        ? void 0\n        : schema.getDirectives()) !== null && _schema$getDirectives !== void 0\n      ? _schema$getDirectives\n      : _directives.specifiedDirectives;\n\n  for (const directive of definedDirectives) {\n    requiredArgsMap[directive.name] = (0, _keyMap.keyMap)(\n      directive.args.filter(_definition.isRequiredArgument),\n      (arg) => arg.name,\n    );\n  }\n\n  const astDefinitions = context.getDocument().definitions;\n\n  for (const def of astDefinitions) {\n    if (def.kind === _kinds.Kind.DIRECTIVE_DEFINITION) {\n      var _def$arguments;\n\n      // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n      /* c8 ignore next */\n      const argNodes =\n        (_def$arguments = def.arguments) !== null && _def$arguments !== void 0\n          ? _def$arguments\n          : [];\n      requiredArgsMap[def.name.value] = (0, _keyMap.keyMap)(\n        argNodes.filter(isRequiredArgumentNode),\n        (arg) => arg.name.value,\n      );\n    }\n  }\n\n  return {\n    Directive: {\n      // Validate on leave to allow for deeper errors to appear first.\n      leave(directiveNode) {\n        const directiveName = directiveNode.name.value;\n        const requiredArgs = requiredArgsMap[directiveName];\n\n        if (requiredArgs) {\n          var _directiveNode$argume;\n\n          // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n          /* c8 ignore next */\n          const argNodes =\n            (_directiveNode$argume = directiveNode.arguments) !== null &&\n            _directiveNode$argume !== void 0\n              ? _directiveNode$argume\n              : [];\n          const argNodeMap = new Set(argNodes.map((arg) => arg.name.value));\n\n          for (const [argName, argDef] of Object.entries(requiredArgs)) {\n            if (!argNodeMap.has(argName)) {\n              const argType = (0, _definition.isType)(argDef.type)\n                ? (0, _inspect.inspect)(argDef.type)\n                : (0, _printer.print)(argDef.type);\n              context.reportError(\n                new _GraphQLError.GraphQLError(\n                  `Directive \"@${directiveName}\" argument \"${argName}\" of type \"${argType}\" is required, but it was not provided.`,\n                  {\n                    nodes: directiveNode,\n                  },\n                ),\n              );\n            }\n          }\n        }\n      },\n    },\n  };\n}\n\nfunction isRequiredArgumentNode(arg) {\n  return (\n    arg.type.kind === _kinds.Kind.NON_NULL_TYPE && arg.defaultValue == null\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}