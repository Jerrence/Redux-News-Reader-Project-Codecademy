{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.UniqueInputFieldNamesRule = UniqueInputFieldNamesRule;\nvar _invariant = require('../../jsutils/invariant.js');\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\n/**\n * Unique input field names\n *\n * A GraphQL input object value is only valid if all supplied fields are\n * uniquely named.\n *\n * See https://spec.graphql.org/draft/#sec-Input-Object-Field-Uniqueness\n */\nfunction UniqueInputFieldNamesRule(context) {\n  const knownNameStack = [];\n  let knownNames = Object.create(null);\n  return {\n    ObjectValue: {\n      enter() {\n        knownNameStack.push(knownNames);\n        knownNames = Object.create(null);\n      },\n      leave() {\n        const prevKnownNames = knownNameStack.pop();\n        prevKnownNames || (0, _invariant.invariant)(false);\n        knownNames = prevKnownNames;\n      }\n    },\n    ObjectField(node) {\n      const fieldName = node.name.value;\n      if (knownNames[fieldName]) {\n        context.reportError(new _GraphQLError.GraphQLError(`There can be only one input field named \"${fieldName}\".`, {\n          nodes: [knownNames[fieldName], node.name]\n        }));\n      } else {\n        knownNames[fieldName] = node.name;\n      }\n    }\n  };\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","UniqueInputFieldNamesRule","_invariant","require","_GraphQLError","context","knownNameStack","knownNames","create","ObjectValue","enter","push","leave","prevKnownNames","pop","invariant","ObjectField","node","fieldName","name","reportError","GraphQLError","nodes"],"sources":["/Users/lawrence/Documents/Codecademy/Redux News Reader (project)/node_modules/graphql/validation/rules/UniqueInputFieldNamesRule.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.UniqueInputFieldNamesRule = UniqueInputFieldNamesRule;\n\nvar _invariant = require('../../jsutils/invariant.js');\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\n/**\n * Unique input field names\n *\n * A GraphQL input object value is only valid if all supplied fields are\n * uniquely named.\n *\n * See https://spec.graphql.org/draft/#sec-Input-Object-Field-Uniqueness\n */\nfunction UniqueInputFieldNamesRule(context) {\n  const knownNameStack = [];\n  let knownNames = Object.create(null);\n  return {\n    ObjectValue: {\n      enter() {\n        knownNameStack.push(knownNames);\n        knownNames = Object.create(null);\n      },\n\n      leave() {\n        const prevKnownNames = knownNameStack.pop();\n        prevKnownNames || (0, _invariant.invariant)(false);\n        knownNames = prevKnownNames;\n      },\n    },\n\n    ObjectField(node) {\n      const fieldName = node.name.value;\n\n      if (knownNames[fieldName]) {\n        context.reportError(\n          new _GraphQLError.GraphQLError(\n            `There can be only one input field named \"${fieldName}\".`,\n            {\n              nodes: [knownNames[fieldName], node.name],\n            },\n          ),\n        );\n      } else {\n        knownNames[fieldName] = node.name;\n      }\n    },\n  };\n}\n"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,yBAAyB,GAAGA,yBAAyB;AAE7D,IAAIC,UAAU,GAAGC,OAAO,CAAC,4BAA4B,CAAC;AAEtD,IAAIC,aAAa,GAAGD,OAAO,CAAC,6BAA6B,CAAC;;AAE1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASF,yBAAyB,CAACI,OAAO,EAAE;EAC1C,MAAMC,cAAc,GAAG,EAAE;EACzB,IAAIC,UAAU,GAAGV,MAAM,CAACW,MAAM,CAAC,IAAI,CAAC;EACpC,OAAO;IACLC,WAAW,EAAE;MACXC,KAAK,GAAG;QACNJ,cAAc,CAACK,IAAI,CAACJ,UAAU,CAAC;QAC/BA,UAAU,GAAGV,MAAM,CAACW,MAAM,CAAC,IAAI,CAAC;MAClC,CAAC;MAEDI,KAAK,GAAG;QACN,MAAMC,cAAc,GAAGP,cAAc,CAACQ,GAAG,EAAE;QAC3CD,cAAc,IAAI,CAAC,CAAC,EAAEX,UAAU,CAACa,SAAS,EAAE,KAAK,CAAC;QAClDR,UAAU,GAAGM,cAAc;MAC7B;IACF,CAAC;IAEDG,WAAW,CAACC,IAAI,EAAE;MAChB,MAAMC,SAAS,GAAGD,IAAI,CAACE,IAAI,CAACnB,KAAK;MAEjC,IAAIO,UAAU,CAACW,SAAS,CAAC,EAAE;QACzBb,OAAO,CAACe,WAAW,CACjB,IAAIhB,aAAa,CAACiB,YAAY,CAC3B,4CAA2CH,SAAU,IAAG,EACzD;UACEI,KAAK,EAAE,CAACf,UAAU,CAACW,SAAS,CAAC,EAAED,IAAI,CAACE,IAAI;QAC1C,CAAC,CACF,CACF;MACH,CAAC,MAAM;QACLZ,UAAU,CAACW,SAAS,CAAC,GAAGD,IAAI,CAACE,IAAI;MACnC;IACF;EACF,CAAC;AACH"},"metadata":{},"sourceType":"script","externalDependencies":[]}