{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.UniqueFragmentNamesRule = UniqueFragmentNamesRule;\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\n/**\n * Unique fragment names\n *\n * A GraphQL document is only valid if all defined fragments have unique names.\n *\n * See https://spec.graphql.org/draft/#sec-Fragment-Name-Uniqueness\n */\nfunction UniqueFragmentNamesRule(context) {\n  const knownFragmentNames = Object.create(null);\n  return {\n    OperationDefinition: () => false,\n    FragmentDefinition(node) {\n      const fragmentName = node.name.value;\n      if (knownFragmentNames[fragmentName]) {\n        context.reportError(new _GraphQLError.GraphQLError(`There can be only one fragment named \"${fragmentName}\".`, {\n          nodes: [knownFragmentNames[fragmentName], node.name]\n        }));\n      } else {\n        knownFragmentNames[fragmentName] = node.name;\n      }\n      return false;\n    }\n  };\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","UniqueFragmentNamesRule","_GraphQLError","require","context","knownFragmentNames","create","OperationDefinition","FragmentDefinition","node","fragmentName","name","reportError","GraphQLError","nodes"],"sources":["/Users/lawrence/Documents/Codecademy/Redux News Reader (project)/node_modules/graphql/validation/rules/UniqueFragmentNamesRule.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.UniqueFragmentNamesRule = UniqueFragmentNamesRule;\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\n/**\n * Unique fragment names\n *\n * A GraphQL document is only valid if all defined fragments have unique names.\n *\n * See https://spec.graphql.org/draft/#sec-Fragment-Name-Uniqueness\n */\nfunction UniqueFragmentNamesRule(context) {\n  const knownFragmentNames = Object.create(null);\n  return {\n    OperationDefinition: () => false,\n\n    FragmentDefinition(node) {\n      const fragmentName = node.name.value;\n\n      if (knownFragmentNames[fragmentName]) {\n        context.reportError(\n          new _GraphQLError.GraphQLError(\n            `There can be only one fragment named \"${fragmentName}\".`,\n            {\n              nodes: [knownFragmentNames[fragmentName], node.name],\n            },\n          ),\n        );\n      } else {\n        knownFragmentNames[fragmentName] = node.name;\n      }\n\n      return false;\n    },\n  };\n}\n"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,uBAAuB,GAAGA,uBAAuB;AAEzD,IAAIC,aAAa,GAAGC,OAAO,CAAC,6BAA6B,CAAC;;AAE1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASF,uBAAuB,CAACG,OAAO,EAAE;EACxC,MAAMC,kBAAkB,GAAGR,MAAM,CAACS,MAAM,CAAC,IAAI,CAAC;EAC9C,OAAO;IACLC,mBAAmB,EAAE,MAAM,KAAK;IAEhCC,kBAAkB,CAACC,IAAI,EAAE;MACvB,MAAMC,YAAY,GAAGD,IAAI,CAACE,IAAI,CAACX,KAAK;MAEpC,IAAIK,kBAAkB,CAACK,YAAY,CAAC,EAAE;QACpCN,OAAO,CAACQ,WAAW,CACjB,IAAIV,aAAa,CAACW,YAAY,CAC3B,yCAAwCH,YAAa,IAAG,EACzD;UACEI,KAAK,EAAE,CAACT,kBAAkB,CAACK,YAAY,CAAC,EAAED,IAAI,CAACE,IAAI;QACrD,CAAC,CACF,CACF;MACH,CAAC,MAAM;QACLN,kBAAkB,CAACK,YAAY,CAAC,GAAGD,IAAI,CAACE,IAAI;MAC9C;MAEA,OAAO,KAAK;IACd;EACF,CAAC;AACH"},"metadata":{},"sourceType":"script","externalDependencies":[]}