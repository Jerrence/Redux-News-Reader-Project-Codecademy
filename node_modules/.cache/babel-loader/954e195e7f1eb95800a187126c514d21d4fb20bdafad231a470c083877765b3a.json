{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.graphql = graphql;\nexports.graphqlSync = graphqlSync;\nvar _devAssert = require('./jsutils/devAssert.js');\nvar _isPromise = require('./jsutils/isPromise.js');\nvar _parser = require('./language/parser.js');\nvar _validate = require('./type/validate.js');\nvar _validate2 = require('./validation/validate.js');\nvar _execute = require('./execution/execute.js');\nfunction graphql(args) {\n  // Always return a Promise for a consistent API.\n  return new Promise(resolve => resolve(graphqlImpl(args)));\n}\n/**\n * The graphqlSync function also fulfills GraphQL operations by parsing,\n * validating, and executing a GraphQL document along side a GraphQL schema.\n * However, it guarantees to complete synchronously (or throw an error) assuming\n * that all field resolvers are also synchronous.\n */\n\nfunction graphqlSync(args) {\n  const result = graphqlImpl(args); // Assert that the execution was synchronous.\n\n  if ((0, _isPromise.isPromise)(result)) {\n    throw new Error('GraphQL execution failed to complete synchronously.');\n  }\n  return result;\n}\nfunction graphqlImpl(args) {\n  // Temporary for v15 to v16 migration. Remove in v17\n  arguments.length < 2 || (0, _devAssert.devAssert)(false, 'graphql@16 dropped long-deprecated support for positional arguments, please pass an object instead.');\n  const {\n    schema,\n    source,\n    rootValue,\n    contextValue,\n    variableValues,\n    operationName,\n    fieldResolver,\n    typeResolver\n  } = args; // Validate Schema\n\n  const schemaValidationErrors = (0, _validate.validateSchema)(schema);\n  if (schemaValidationErrors.length > 0) {\n    return {\n      errors: schemaValidationErrors\n    };\n  } // Parse\n\n  let document;\n  try {\n    document = (0, _parser.parse)(source);\n  } catch (syntaxError) {\n    return {\n      errors: [syntaxError]\n    };\n  } // Validate\n\n  const validationErrors = (0, _validate2.validate)(schema, document);\n  if (validationErrors.length > 0) {\n    return {\n      errors: validationErrors\n    };\n  } // Execute\n\n  return (0, _execute.execute)({\n    schema,\n    document,\n    rootValue,\n    contextValue,\n    variableValues,\n    operationName,\n    fieldResolver,\n    typeResolver\n  });\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","graphql","graphqlSync","_devAssert","require","_isPromise","_parser","_validate","_validate2","_execute","args","Promise","resolve","graphqlImpl","result","isPromise","Error","arguments","length","devAssert","schema","source","rootValue","contextValue","variableValues","operationName","fieldResolver","typeResolver","schemaValidationErrors","validateSchema","errors","document","parse","syntaxError","validationErrors","validate","execute"],"sources":["/Users/lawrence/Documents/Codecademy/Redux News Reader (project)/node_modules/graphql/graphql.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.graphql = graphql;\nexports.graphqlSync = graphqlSync;\n\nvar _devAssert = require('./jsutils/devAssert.js');\n\nvar _isPromise = require('./jsutils/isPromise.js');\n\nvar _parser = require('./language/parser.js');\n\nvar _validate = require('./type/validate.js');\n\nvar _validate2 = require('./validation/validate.js');\n\nvar _execute = require('./execution/execute.js');\n\nfunction graphql(args) {\n  // Always return a Promise for a consistent API.\n  return new Promise((resolve) => resolve(graphqlImpl(args)));\n}\n/**\n * The graphqlSync function also fulfills GraphQL operations by parsing,\n * validating, and executing a GraphQL document along side a GraphQL schema.\n * However, it guarantees to complete synchronously (or throw an error) assuming\n * that all field resolvers are also synchronous.\n */\n\nfunction graphqlSync(args) {\n  const result = graphqlImpl(args); // Assert that the execution was synchronous.\n\n  if ((0, _isPromise.isPromise)(result)) {\n    throw new Error('GraphQL execution failed to complete synchronously.');\n  }\n\n  return result;\n}\n\nfunction graphqlImpl(args) {\n  // Temporary for v15 to v16 migration. Remove in v17\n  arguments.length < 2 ||\n    (0, _devAssert.devAssert)(\n      false,\n      'graphql@16 dropped long-deprecated support for positional arguments, please pass an object instead.',\n    );\n  const {\n    schema,\n    source,\n    rootValue,\n    contextValue,\n    variableValues,\n    operationName,\n    fieldResolver,\n    typeResolver,\n  } = args; // Validate Schema\n\n  const schemaValidationErrors = (0, _validate.validateSchema)(schema);\n\n  if (schemaValidationErrors.length > 0) {\n    return {\n      errors: schemaValidationErrors,\n    };\n  } // Parse\n\n  let document;\n\n  try {\n    document = (0, _parser.parse)(source);\n  } catch (syntaxError) {\n    return {\n      errors: [syntaxError],\n    };\n  } // Validate\n\n  const validationErrors = (0, _validate2.validate)(schema, document);\n\n  if (validationErrors.length > 0) {\n    return {\n      errors: validationErrors,\n    };\n  } // Execute\n\n  return (0, _execute.execute)({\n    schema,\n    document,\n    rootValue,\n    contextValue,\n    variableValues,\n    operationName,\n    fieldResolver,\n    typeResolver,\n  });\n}\n"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,OAAO,GAAGA,OAAO;AACzBF,OAAO,CAACG,WAAW,GAAGA,WAAW;AAEjC,IAAIC,UAAU,GAAGC,OAAO,CAAC,wBAAwB,CAAC;AAElD,IAAIC,UAAU,GAAGD,OAAO,CAAC,wBAAwB,CAAC;AAElD,IAAIE,OAAO,GAAGF,OAAO,CAAC,sBAAsB,CAAC;AAE7C,IAAIG,SAAS,GAAGH,OAAO,CAAC,oBAAoB,CAAC;AAE7C,IAAII,UAAU,GAAGJ,OAAO,CAAC,0BAA0B,CAAC;AAEpD,IAAIK,QAAQ,GAAGL,OAAO,CAAC,wBAAwB,CAAC;AAEhD,SAASH,OAAO,CAACS,IAAI,EAAE;EACrB;EACA,OAAO,IAAIC,OAAO,CAAEC,OAAO,IAAKA,OAAO,CAACC,WAAW,CAACH,IAAI,CAAC,CAAC,CAAC;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASR,WAAW,CAACQ,IAAI,EAAE;EACzB,MAAMI,MAAM,GAAGD,WAAW,CAACH,IAAI,CAAC,CAAC,CAAC;;EAElC,IAAI,CAAC,CAAC,EAAEL,UAAU,CAACU,SAAS,EAAED,MAAM,CAAC,EAAE;IACrC,MAAM,IAAIE,KAAK,CAAC,qDAAqD,CAAC;EACxE;EAEA,OAAOF,MAAM;AACf;AAEA,SAASD,WAAW,CAACH,IAAI,EAAE;EACzB;EACAO,SAAS,CAACC,MAAM,GAAG,CAAC,IAClB,CAAC,CAAC,EAAEf,UAAU,CAACgB,SAAS,EACtB,KAAK,EACL,qGAAqG,CACtG;EACH,MAAM;IACJC,MAAM;IACNC,MAAM;IACNC,SAAS;IACTC,YAAY;IACZC,cAAc;IACdC,aAAa;IACbC,aAAa;IACbC;EACF,CAAC,GAAGjB,IAAI,CAAC,CAAC;;EAEV,MAAMkB,sBAAsB,GAAG,CAAC,CAAC,EAAErB,SAAS,CAACsB,cAAc,EAAET,MAAM,CAAC;EAEpE,IAAIQ,sBAAsB,CAACV,MAAM,GAAG,CAAC,EAAE;IACrC,OAAO;MACLY,MAAM,EAAEF;IACV,CAAC;EACH,CAAC,CAAC;;EAEF,IAAIG,QAAQ;EAEZ,IAAI;IACFA,QAAQ,GAAG,CAAC,CAAC,EAAEzB,OAAO,CAAC0B,KAAK,EAAEX,MAAM,CAAC;EACvC,CAAC,CAAC,OAAOY,WAAW,EAAE;IACpB,OAAO;MACLH,MAAM,EAAE,CAACG,WAAW;IACtB,CAAC;EACH,CAAC,CAAC;;EAEF,MAAMC,gBAAgB,GAAG,CAAC,CAAC,EAAE1B,UAAU,CAAC2B,QAAQ,EAAEf,MAAM,EAAEW,QAAQ,CAAC;EAEnE,IAAIG,gBAAgB,CAAChB,MAAM,GAAG,CAAC,EAAE;IAC/B,OAAO;MACLY,MAAM,EAAEI;IACV,CAAC;EACH,CAAC,CAAC;;EAEF,OAAO,CAAC,CAAC,EAAEzB,QAAQ,CAAC2B,OAAO,EAAE;IAC3BhB,MAAM;IACNW,QAAQ;IACRT,SAAS;IACTC,YAAY;IACZC,cAAc;IACdC,aAAa;IACbC,aAAa;IACbC;EACF,CAAC,CAAC;AACJ"},"metadata":{},"sourceType":"script","externalDependencies":[]}