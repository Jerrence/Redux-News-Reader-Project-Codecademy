{"ast":null,"code":"var _jsxFileName = \"/Users/lawrence/Documents/Codecademy/Redux News Reader (project)/src/components/CommentForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { createCommentIsPending, postCommentForArticleId } from '../features/comments/commentsSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CommentForm(_ref) {\n  _s();\n  let {\n    articleId\n  } = _ref;\n  const dispatch = useDispatch();\n  const [comment, setComment] = useState('');\n\n  // Declare isCreatePending here.\n  const isCreatePending = useSelector(createCommentIsPending);\n  const handleSubmit = e => {\n    e.preventDefault();\n    // dispatch your asynchronous action here!\n    console.log(comment);\n    dispatch(postCommentForArticleId({\n      articleId: articleId,\n      comment: comment\n    }));\n    setComment('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      for: \"comment\",\n      className: \"label\",\n      children: \"Add Comment:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"comment\",\n        value: comment,\n        onChange: e => setComment(e.currentTarget.value),\n        type: \"text\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"comment-button\",\n        disabled: isCreatePending,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(CommentForm, \"ybHrUzEzLXo6ZLylXbQTfet42OE=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = CommentForm;\nvar _c;\n$RefreshReg$(_c, \"CommentForm\");","map":{"version":3,"names":["React","useState","useDispatch","useSelector","createCommentIsPending","postCommentForArticleId","CommentForm","articleId","dispatch","comment","setComment","isCreatePending","handleSubmit","e","preventDefault","console","log","currentTarget","value"],"sources":["/Users/lawrence/Documents/Codecademy/Redux News Reader (project)/src/components/CommentForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  createCommentIsPending,\n  postCommentForArticleId\n} from '../features/comments/commentsSlice';\n\nexport default function CommentForm({ articleId }) {\n  const dispatch = useDispatch();\n  const [comment, setComment] = useState('');\n  \n  // Declare isCreatePending here.\n  const isCreatePending = useSelector(createCommentIsPending);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // dispatch your asynchronous action here!\n    console.log(comment)\n    dispatch (\n      postCommentForArticleId ({\n        articleId: articleId,\n        comment: comment\n      })\n    );\n\n    setComment('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label for='comment' className='label'>\n        Add Comment:\n      </label>\n      <div id='input-container'>\n        <input\n          id='comment'\n          value={comment}\n          onChange={(e) => setComment(e.currentTarget.value)}\n          type='text'\n          required\n        />\n        <button\n          \n          className='comment-button'\n          disabled={isCreatePending}\n        >\n          Submit\n        </button>\n      </div>\n    </form>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SACEC,sBAAsB,EACtBC,uBAAuB,QAClB,oCAAoC;AAAC;AAE5C,eAAe,SAASC,WAAW,OAAgB;EAAA;EAAA,IAAf;IAAEC;EAAU,CAAC;EAC/C,MAAMC,QAAQ,GAAGN,WAAW,EAAE;EAC9B,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;;EAE1C;EACA,MAAMU,eAAe,GAAGR,WAAW,CAACC,sBAAsB,CAAC;EAE3D,MAAMQ,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,EAAE;IAClB;IACAC,OAAO,CAACC,GAAG,CAACP,OAAO,CAAC;IACpBD,QAAQ,CACNH,uBAAuB,CAAE;MACvBE,SAAS,EAAEA,SAAS;MACpBE,OAAO,EAAEA;IACX,CAAC,CAAC,CACH;IAEDC,UAAU,CAAC,EAAE,CAAC;EAChB,CAAC;EAED,oBACE;IAAM,QAAQ,EAAEE,YAAa;IAAA,wBAC3B;MAAO,GAAG,EAAC,SAAS;MAAC,SAAS,EAAC,OAAO;MAAA,UAAC;IAEvC;MAAA;MAAA;MAAA;IAAA,QAAQ,eACR;MAAK,EAAE,EAAC,iBAAiB;MAAA,wBACvB;QACE,EAAE,EAAC,SAAS;QACZ,KAAK,EAAEH,OAAQ;QACf,QAAQ,EAAGI,CAAC,IAAKH,UAAU,CAACG,CAAC,CAACI,aAAa,CAACC,KAAK,CAAE;QACnD,IAAI,EAAC,MAAM;QACX,QAAQ;MAAA;QAAA;QAAA;QAAA;MAAA,QACR,eACF;QAEE,SAAS,EAAC,gBAAgB;QAC1B,QAAQ,EAAEP,eAAgB;QAAA,UAC3B;MAED;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QACL;EAAA;IAAA;IAAA;IAAA;EAAA,QACD;AAEX;AAAC,GA5CuBL,WAAW;EAAA,QAChBJ,WAAW,EAIJC,WAAW;AAAA;AAAA,KALbG,WAAW;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}