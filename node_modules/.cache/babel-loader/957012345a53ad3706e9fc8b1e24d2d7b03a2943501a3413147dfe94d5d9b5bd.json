{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.UniqueVariableNamesRule = UniqueVariableNamesRule;\nvar _groupBy = require('../../jsutils/groupBy.js');\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\n/**\n * Unique variable names\n *\n * A GraphQL operation is only valid if all its variables are uniquely named.\n */\nfunction UniqueVariableNamesRule(context) {\n  return {\n    OperationDefinition(operationNode) {\n      var _operationNode$variab;\n\n      // See: https://github.com/graphql/graphql-js/issues/2203\n\n      /* c8 ignore next */\n      const variableDefinitions = (_operationNode$variab = operationNode.variableDefinitions) !== null && _operationNode$variab !== void 0 ? _operationNode$variab : [];\n      const seenVariableDefinitions = (0, _groupBy.groupBy)(variableDefinitions, node => node.variable.name.value);\n      for (const [variableName, variableNodes] of seenVariableDefinitions) {\n        if (variableNodes.length > 1) {\n          context.reportError(new _GraphQLError.GraphQLError(`There can be only one variable named \"$${variableName}\".`, {\n            nodes: variableNodes.map(node => node.variable.name)\n          }));\n        }\n      }\n    }\n  };\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","UniqueVariableNamesRule","_groupBy","require","_GraphQLError","context","OperationDefinition","operationNode","_operationNode$variab","variableDefinitions","seenVariableDefinitions","groupBy","node","variable","name","variableName","variableNodes","length","reportError","GraphQLError","nodes","map"],"sources":["/Users/lawrence/Documents/Codecademy/Redux News Reader (project)/node_modules/graphql/validation/rules/UniqueVariableNamesRule.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.UniqueVariableNamesRule = UniqueVariableNamesRule;\n\nvar _groupBy = require('../../jsutils/groupBy.js');\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\n/**\n * Unique variable names\n *\n * A GraphQL operation is only valid if all its variables are uniquely named.\n */\nfunction UniqueVariableNamesRule(context) {\n  return {\n    OperationDefinition(operationNode) {\n      var _operationNode$variab;\n\n      // See: https://github.com/graphql/graphql-js/issues/2203\n\n      /* c8 ignore next */\n      const variableDefinitions =\n        (_operationNode$variab = operationNode.variableDefinitions) !== null &&\n        _operationNode$variab !== void 0\n          ? _operationNode$variab\n          : [];\n      const seenVariableDefinitions = (0, _groupBy.groupBy)(\n        variableDefinitions,\n        (node) => node.variable.name.value,\n      );\n\n      for (const [variableName, variableNodes] of seenVariableDefinitions) {\n        if (variableNodes.length > 1) {\n          context.reportError(\n            new _GraphQLError.GraphQLError(\n              `There can be only one variable named \"$${variableName}\".`,\n              {\n                nodes: variableNodes.map((node) => node.variable.name),\n              },\n            ),\n          );\n        }\n      }\n    },\n  };\n}\n"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,uBAAuB,GAAGA,uBAAuB;AAEzD,IAAIC,QAAQ,GAAGC,OAAO,CAAC,0BAA0B,CAAC;AAElD,IAAIC,aAAa,GAAGD,OAAO,CAAC,6BAA6B,CAAC;;AAE1D;AACA;AACA;AACA;AACA;AACA,SAASF,uBAAuB,CAACI,OAAO,EAAE;EACxC,OAAO;IACLC,mBAAmB,CAACC,aAAa,EAAE;MACjC,IAAIC,qBAAqB;;MAEzB;;MAEA;MACA,MAAMC,mBAAmB,GACvB,CAACD,qBAAqB,GAAGD,aAAa,CAACE,mBAAmB,MAAM,IAAI,IACpED,qBAAqB,KAAK,KAAK,CAAC,GAC5BA,qBAAqB,GACrB,EAAE;MACR,MAAME,uBAAuB,GAAG,CAAC,CAAC,EAAER,QAAQ,CAACS,OAAO,EAClDF,mBAAmB,EAClBG,IAAI,IAAKA,IAAI,CAACC,QAAQ,CAACC,IAAI,CAACd,KAAK,CACnC;MAED,KAAK,MAAM,CAACe,YAAY,EAAEC,aAAa,CAAC,IAAIN,uBAAuB,EAAE;QACnE,IAAIM,aAAa,CAACC,MAAM,GAAG,CAAC,EAAE;UAC5BZ,OAAO,CAACa,WAAW,CACjB,IAAId,aAAa,CAACe,YAAY,CAC3B,0CAAyCJ,YAAa,IAAG,EAC1D;YACEK,KAAK,EAAEJ,aAAa,CAACK,GAAG,CAAET,IAAI,IAAKA,IAAI,CAACC,QAAQ,CAACC,IAAI;UACvD,CAAC,CACF,CACF;QACH;MACF;IACF;EACF,CAAC;AACH"},"metadata":{},"sourceType":"script","externalDependencies":[]}