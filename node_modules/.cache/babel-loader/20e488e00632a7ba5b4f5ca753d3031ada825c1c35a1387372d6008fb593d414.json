{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.ExecutableDefinitionsRule = ExecutableDefinitionsRule;\nvar _GraphQLError = require('../../error/GraphQLError.js');\nvar _kinds = require('../../language/kinds.js');\nvar _predicates = require('../../language/predicates.js');\n\n/**\n * Executable definitions\n *\n * A GraphQL document is only valid for execution if all definitions are either\n * operation or fragment definitions.\n *\n * See https://spec.graphql.org/draft/#sec-Executable-Definitions\n */\nfunction ExecutableDefinitionsRule(context) {\n  return {\n    Document(node) {\n      for (const definition of node.definitions) {\n        if (!(0, _predicates.isExecutableDefinitionNode)(definition)) {\n          const defName = definition.kind === _kinds.Kind.SCHEMA_DEFINITION || definition.kind === _kinds.Kind.SCHEMA_EXTENSION ? 'schema' : '\"' + definition.name.value + '\"';\n          context.reportError(new _GraphQLError.GraphQLError(`The ${defName} definition is not executable.`, {\n            nodes: definition\n          }));\n        }\n      }\n      return false;\n    }\n  };\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","ExecutableDefinitionsRule","_GraphQLError","require","_kinds","_predicates","context","Document","node","definition","definitions","isExecutableDefinitionNode","defName","kind","Kind","SCHEMA_DEFINITION","SCHEMA_EXTENSION","name","reportError","GraphQLError","nodes"],"sources":["/Users/lawrence/Documents/Codecademy/Redux News Reader (project)/node_modules/graphql/validation/rules/ExecutableDefinitionsRule.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.ExecutableDefinitionsRule = ExecutableDefinitionsRule;\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\nvar _kinds = require('../../language/kinds.js');\n\nvar _predicates = require('../../language/predicates.js');\n\n/**\n * Executable definitions\n *\n * A GraphQL document is only valid for execution if all definitions are either\n * operation or fragment definitions.\n *\n * See https://spec.graphql.org/draft/#sec-Executable-Definitions\n */\nfunction ExecutableDefinitionsRule(context) {\n  return {\n    Document(node) {\n      for (const definition of node.definitions) {\n        if (!(0, _predicates.isExecutableDefinitionNode)(definition)) {\n          const defName =\n            definition.kind === _kinds.Kind.SCHEMA_DEFINITION ||\n            definition.kind === _kinds.Kind.SCHEMA_EXTENSION\n              ? 'schema'\n              : '\"' + definition.name.value + '\"';\n          context.reportError(\n            new _GraphQLError.GraphQLError(\n              `The ${defName} definition is not executable.`,\n              {\n                nodes: definition,\n              },\n            ),\n          );\n        }\n      }\n\n      return false;\n    },\n  };\n}\n"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,yBAAyB,GAAGA,yBAAyB;AAE7D,IAAIC,aAAa,GAAGC,OAAO,CAAC,6BAA6B,CAAC;AAE1D,IAAIC,MAAM,GAAGD,OAAO,CAAC,yBAAyB,CAAC;AAE/C,IAAIE,WAAW,GAAGF,OAAO,CAAC,8BAA8B,CAAC;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASF,yBAAyB,CAACK,OAAO,EAAE;EAC1C,OAAO;IACLC,QAAQ,CAACC,IAAI,EAAE;MACb,KAAK,MAAMC,UAAU,IAAID,IAAI,CAACE,WAAW,EAAE;QACzC,IAAI,CAAC,CAAC,CAAC,EAAEL,WAAW,CAACM,0BAA0B,EAAEF,UAAU,CAAC,EAAE;UAC5D,MAAMG,OAAO,GACXH,UAAU,CAACI,IAAI,KAAKT,MAAM,CAACU,IAAI,CAACC,iBAAiB,IACjDN,UAAU,CAACI,IAAI,KAAKT,MAAM,CAACU,IAAI,CAACE,gBAAgB,GAC5C,QAAQ,GACR,GAAG,GAAGP,UAAU,CAACQ,IAAI,CAACjB,KAAK,GAAG,GAAG;UACvCM,OAAO,CAACY,WAAW,CACjB,IAAIhB,aAAa,CAACiB,YAAY,CAC3B,OAAMP,OAAQ,gCAA+B,EAC9C;YACEQ,KAAK,EAAEX;UACT,CAAC,CACF,CACF;QACH;MACF;MAEA,OAAO,KAAK;IACd;EACF,CAAC;AACH"},"metadata":{},"sourceType":"script","externalDependencies":[]}