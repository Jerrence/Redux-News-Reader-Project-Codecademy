{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.assertValidName = assertValidName;\nexports.isValidNameError = isValidNameError;\nvar _devAssert = require('../jsutils/devAssert.js');\nvar _GraphQLError = require('../error/GraphQLError.js');\nvar _assertName = require('../type/assertName.js');\n\n/* c8 ignore start */\n\n/**\n * Upholds the spec rules about naming.\n * @deprecated Please use `assertName` instead. Will be removed in v17\n */\nfunction assertValidName(name) {\n  const error = isValidNameError(name);\n  if (error) {\n    throw error;\n  }\n  return name;\n}\n/**\n * Returns an Error if a name is invalid.\n * @deprecated Please use `assertName` instead. Will be removed in v17\n */\n\nfunction isValidNameError(name) {\n  typeof name === 'string' || (0, _devAssert.devAssert)(false, 'Expected name to be a string.');\n  if (name.startsWith('__')) {\n    return new _GraphQLError.GraphQLError(`Name \"${name}\" must not begin with \"__\", which is reserved by GraphQL introspection.`);\n  }\n  try {\n    (0, _assertName.assertName)(name);\n  } catch (error) {\n    return error;\n  }\n}\n/* c8 ignore stop */","map":{"version":3,"names":["Object","defineProperty","exports","value","assertValidName","isValidNameError","_devAssert","require","_GraphQLError","_assertName","name","error","devAssert","startsWith","GraphQLError","assertName"],"sources":["/Users/lawrence/Documents/Codecademy/Redux News Reader (project)/node_modules/graphql/utilities/assertValidName.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.assertValidName = assertValidName;\nexports.isValidNameError = isValidNameError;\n\nvar _devAssert = require('../jsutils/devAssert.js');\n\nvar _GraphQLError = require('../error/GraphQLError.js');\n\nvar _assertName = require('../type/assertName.js');\n\n/* c8 ignore start */\n\n/**\n * Upholds the spec rules about naming.\n * @deprecated Please use `assertName` instead. Will be removed in v17\n */\nfunction assertValidName(name) {\n  const error = isValidNameError(name);\n\n  if (error) {\n    throw error;\n  }\n\n  return name;\n}\n/**\n * Returns an Error if a name is invalid.\n * @deprecated Please use `assertName` instead. Will be removed in v17\n */\n\nfunction isValidNameError(name) {\n  typeof name === 'string' ||\n    (0, _devAssert.devAssert)(false, 'Expected name to be a string.');\n\n  if (name.startsWith('__')) {\n    return new _GraphQLError.GraphQLError(\n      `Name \"${name}\" must not begin with \"__\", which is reserved by GraphQL introspection.`,\n    );\n  }\n\n  try {\n    (0, _assertName.assertName)(name);\n  } catch (error) {\n    return error;\n  }\n}\n/* c8 ignore stop */\n"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,eAAe,GAAGA,eAAe;AACzCF,OAAO,CAACG,gBAAgB,GAAGA,gBAAgB;AAE3C,IAAIC,UAAU,GAAGC,OAAO,CAAC,yBAAyB,CAAC;AAEnD,IAAIC,aAAa,GAAGD,OAAO,CAAC,0BAA0B,CAAC;AAEvD,IAAIE,WAAW,GAAGF,OAAO,CAAC,uBAAuB,CAAC;;AAElD;;AAEA;AACA;AACA;AACA;AACA,SAASH,eAAe,CAACM,IAAI,EAAE;EAC7B,MAAMC,KAAK,GAAGN,gBAAgB,CAACK,IAAI,CAAC;EAEpC,IAAIC,KAAK,EAAE;IACT,MAAMA,KAAK;EACb;EAEA,OAAOD,IAAI;AACb;AACA;AACA;AACA;AACA;;AAEA,SAASL,gBAAgB,CAACK,IAAI,EAAE;EAC9B,OAAOA,IAAI,KAAK,QAAQ,IACtB,CAAC,CAAC,EAAEJ,UAAU,CAACM,SAAS,EAAE,KAAK,EAAE,+BAA+B,CAAC;EAEnE,IAAIF,IAAI,CAACG,UAAU,CAAC,IAAI,CAAC,EAAE;IACzB,OAAO,IAAIL,aAAa,CAACM,YAAY,CAClC,SAAQJ,IAAK,yEAAwE,CACvF;EACH;EAEA,IAAI;IACF,CAAC,CAAC,EAAED,WAAW,CAACM,UAAU,EAAEL,IAAI,CAAC;EACnC,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,OAAOA,KAAK;EACd;AACF;AACA"},"metadata":{},"sourceType":"script","externalDependencies":[]}