{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.UniqueOperationNamesRule = UniqueOperationNamesRule;\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\n/**\n * Unique operation names\n *\n * A GraphQL document is only valid if all defined operations have unique names.\n *\n * See https://spec.graphql.org/draft/#sec-Operation-Name-Uniqueness\n */\nfunction UniqueOperationNamesRule(context) {\n  const knownOperationNames = Object.create(null);\n  return {\n    OperationDefinition(node) {\n      const operationName = node.name;\n      if (operationName) {\n        if (knownOperationNames[operationName.value]) {\n          context.reportError(new _GraphQLError.GraphQLError(`There can be only one operation named \"${operationName.value}\".`, {\n            nodes: [knownOperationNames[operationName.value], operationName]\n          }));\n        } else {\n          knownOperationNames[operationName.value] = operationName;\n        }\n      }\n      return false;\n    },\n    FragmentDefinition: () => false\n  };\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","UniqueOperationNamesRule","_GraphQLError","require","context","knownOperationNames","create","OperationDefinition","node","operationName","name","reportError","GraphQLError","nodes","FragmentDefinition"],"sources":["/Users/lawrence/Documents/Codecademy/Redux News Reader (project)/node_modules/graphql/validation/rules/UniqueOperationNamesRule.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.UniqueOperationNamesRule = UniqueOperationNamesRule;\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\n/**\n * Unique operation names\n *\n * A GraphQL document is only valid if all defined operations have unique names.\n *\n * See https://spec.graphql.org/draft/#sec-Operation-Name-Uniqueness\n */\nfunction UniqueOperationNamesRule(context) {\n  const knownOperationNames = Object.create(null);\n  return {\n    OperationDefinition(node) {\n      const operationName = node.name;\n\n      if (operationName) {\n        if (knownOperationNames[operationName.value]) {\n          context.reportError(\n            new _GraphQLError.GraphQLError(\n              `There can be only one operation named \"${operationName.value}\".`,\n              {\n                nodes: [\n                  knownOperationNames[operationName.value],\n                  operationName,\n                ],\n              },\n            ),\n          );\n        } else {\n          knownOperationNames[operationName.value] = operationName;\n        }\n      }\n\n      return false;\n    },\n\n    FragmentDefinition: () => false,\n  };\n}\n"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,wBAAwB,GAAGA,wBAAwB;AAE3D,IAAIC,aAAa,GAAGC,OAAO,CAAC,6BAA6B,CAAC;;AAE1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASF,wBAAwB,CAACG,OAAO,EAAE;EACzC,MAAMC,mBAAmB,GAAGR,MAAM,CAACS,MAAM,CAAC,IAAI,CAAC;EAC/C,OAAO;IACLC,mBAAmB,CAACC,IAAI,EAAE;MACxB,MAAMC,aAAa,GAAGD,IAAI,CAACE,IAAI;MAE/B,IAAID,aAAa,EAAE;QACjB,IAAIJ,mBAAmB,CAACI,aAAa,CAACT,KAAK,CAAC,EAAE;UAC5CI,OAAO,CAACO,WAAW,CACjB,IAAIT,aAAa,CAACU,YAAY,CAC3B,0CAAyCH,aAAa,CAACT,KAAM,IAAG,EACjE;YACEa,KAAK,EAAE,CACLR,mBAAmB,CAACI,aAAa,CAACT,KAAK,CAAC,EACxCS,aAAa;UAEjB,CAAC,CACF,CACF;QACH,CAAC,MAAM;UACLJ,mBAAmB,CAACI,aAAa,CAACT,KAAK,CAAC,GAAGS,aAAa;QAC1D;MACF;MAEA,OAAO,KAAK;IACd,CAAC;IAEDK,kBAAkB,EAAE,MAAM;EAC5B,CAAC;AACH"},"metadata":{},"sourceType":"script","externalDependencies":[]}