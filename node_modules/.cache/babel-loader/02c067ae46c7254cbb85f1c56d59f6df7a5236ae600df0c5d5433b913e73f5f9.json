{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.UniqueDirectivesPerLocationRule = UniqueDirectivesPerLocationRule;\nvar _GraphQLError = require('../../error/GraphQLError.js');\nvar _kinds = require('../../language/kinds.js');\nvar _predicates = require('../../language/predicates.js');\nvar _directives = require('../../type/directives.js');\n\n/**\n * Unique directive names per location\n *\n * A GraphQL document is only valid if all non-repeatable directives at\n * a given location are uniquely named.\n *\n * See https://spec.graphql.org/draft/#sec-Directives-Are-Unique-Per-Location\n */\nfunction UniqueDirectivesPerLocationRule(context) {\n  const uniqueDirectiveMap = Object.create(null);\n  const schema = context.getSchema();\n  const definedDirectives = schema ? schema.getDirectives() : _directives.specifiedDirectives;\n  for (const directive of definedDirectives) {\n    uniqueDirectiveMap[directive.name] = !directive.isRepeatable;\n  }\n  const astDefinitions = context.getDocument().definitions;\n  for (const def of astDefinitions) {\n    if (def.kind === _kinds.Kind.DIRECTIVE_DEFINITION) {\n      uniqueDirectiveMap[def.name.value] = !def.repeatable;\n    }\n  }\n  const schemaDirectives = Object.create(null);\n  const typeDirectivesMap = Object.create(null);\n  return {\n    // Many different AST nodes may contain directives. Rather than listing\n    // them all, just listen for entering any node, and check to see if it\n    // defines any directives.\n    enter(node) {\n      if (!('directives' in node) || !node.directives) {\n        return;\n      }\n      let seenDirectives;\n      if (node.kind === _kinds.Kind.SCHEMA_DEFINITION || node.kind === _kinds.Kind.SCHEMA_EXTENSION) {\n        seenDirectives = schemaDirectives;\n      } else if ((0, _predicates.isTypeDefinitionNode)(node) || (0, _predicates.isTypeExtensionNode)(node)) {\n        const typeName = node.name.value;\n        seenDirectives = typeDirectivesMap[typeName];\n        if (seenDirectives === undefined) {\n          typeDirectivesMap[typeName] = seenDirectives = Object.create(null);\n        }\n      } else {\n        seenDirectives = Object.create(null);\n      }\n      for (const directive of node.directives) {\n        const directiveName = directive.name.value;\n        if (uniqueDirectiveMap[directiveName]) {\n          if (seenDirectives[directiveName]) {\n            context.reportError(new _GraphQLError.GraphQLError(`The directive \"@${directiveName}\" can only be used once at this location.`, {\n              nodes: [seenDirectives[directiveName], directive]\n            }));\n          } else {\n            seenDirectives[directiveName] = directive;\n          }\n        }\n      }\n    }\n  };\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","UniqueDirectivesPerLocationRule","_GraphQLError","require","_kinds","_predicates","_directives","context","uniqueDirectiveMap","create","schema","getSchema","definedDirectives","getDirectives","specifiedDirectives","directive","name","isRepeatable","astDefinitions","getDocument","definitions","def","kind","Kind","DIRECTIVE_DEFINITION","repeatable","schemaDirectives","typeDirectivesMap","enter","node","directives","seenDirectives","SCHEMA_DEFINITION","SCHEMA_EXTENSION","isTypeDefinitionNode","isTypeExtensionNode","typeName","undefined","directiveName","reportError","GraphQLError","nodes"],"sources":["/Users/lawrence/Documents/Codecademy/Redux News Reader (project)/node_modules/graphql/validation/rules/UniqueDirectivesPerLocationRule.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.UniqueDirectivesPerLocationRule = UniqueDirectivesPerLocationRule;\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\nvar _kinds = require('../../language/kinds.js');\n\nvar _predicates = require('../../language/predicates.js');\n\nvar _directives = require('../../type/directives.js');\n\n/**\n * Unique directive names per location\n *\n * A GraphQL document is only valid if all non-repeatable directives at\n * a given location are uniquely named.\n *\n * See https://spec.graphql.org/draft/#sec-Directives-Are-Unique-Per-Location\n */\nfunction UniqueDirectivesPerLocationRule(context) {\n  const uniqueDirectiveMap = Object.create(null);\n  const schema = context.getSchema();\n  const definedDirectives = schema\n    ? schema.getDirectives()\n    : _directives.specifiedDirectives;\n\n  for (const directive of definedDirectives) {\n    uniqueDirectiveMap[directive.name] = !directive.isRepeatable;\n  }\n\n  const astDefinitions = context.getDocument().definitions;\n\n  for (const def of astDefinitions) {\n    if (def.kind === _kinds.Kind.DIRECTIVE_DEFINITION) {\n      uniqueDirectiveMap[def.name.value] = !def.repeatable;\n    }\n  }\n\n  const schemaDirectives = Object.create(null);\n  const typeDirectivesMap = Object.create(null);\n  return {\n    // Many different AST nodes may contain directives. Rather than listing\n    // them all, just listen for entering any node, and check to see if it\n    // defines any directives.\n    enter(node) {\n      if (!('directives' in node) || !node.directives) {\n        return;\n      }\n\n      let seenDirectives;\n\n      if (\n        node.kind === _kinds.Kind.SCHEMA_DEFINITION ||\n        node.kind === _kinds.Kind.SCHEMA_EXTENSION\n      ) {\n        seenDirectives = schemaDirectives;\n      } else if (\n        (0, _predicates.isTypeDefinitionNode)(node) ||\n        (0, _predicates.isTypeExtensionNode)(node)\n      ) {\n        const typeName = node.name.value;\n        seenDirectives = typeDirectivesMap[typeName];\n\n        if (seenDirectives === undefined) {\n          typeDirectivesMap[typeName] = seenDirectives = Object.create(null);\n        }\n      } else {\n        seenDirectives = Object.create(null);\n      }\n\n      for (const directive of node.directives) {\n        const directiveName = directive.name.value;\n\n        if (uniqueDirectiveMap[directiveName]) {\n          if (seenDirectives[directiveName]) {\n            context.reportError(\n              new _GraphQLError.GraphQLError(\n                `The directive \"@${directiveName}\" can only be used once at this location.`,\n                {\n                  nodes: [seenDirectives[directiveName], directive],\n                },\n              ),\n            );\n          } else {\n            seenDirectives[directiveName] = directive;\n          }\n        }\n      }\n    },\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}